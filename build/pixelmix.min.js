var pm={REVISION:"1"};pm.ready=!1,pm.simSize,pm.shaders={},pm.clips={},pm.imported={},pm.BLEND={},pm.BLEND.OFF=0,pm.BLEND.Add=1,pm.BLEND.Subtract=2,pm.BLEND.Darkest=3,pm.BLEND.Lightest=4,pm.BLEND.Difference=5,pm.BLEND.Exclusion=6,pm.BLEND.Multiply=7,pm.BLEND.Screen=8,pm.BLEND.Overlay=9,pm.BLEND.HardLight=10,pm.BLEND.SoftLight=11,pm.BLEND.Dodge=12,pm.BLEND.Burn=13,pm.BLEND.LinearBurn=14,pm.BLEND.LinearLight=15,pm.BLEND.VividLight=16,pm.BLEND.PinLight=17,pm.BLEND.Fx=1,pm.BLENDS=["Add","Substract","Darkest","Lightest","Difference","Exclusion","Multiply","Screen","Overlay","HardLight","SoftLight","Dodge","Burn","LinearBurn","LinearLight","VividLight","PinLight"],pm.PORT_TYPE_OFF=0,pm.PORT_TYPE_KINET_1=1,pm.PORT_TYPE_KINET_2=2,pm.PORT_TYPE_KINET_3=3,pm.PORT_TYPE_KINET_4=4,pm.PORT_TYPE_DMX_1=5,pm.PORT_TYPE_DMX_2=6,pm.PORT_TYPE_DMX_3=7,pm.PORT_TYPE_LASER_1=8,pm.CHANNEL_TYPE_OFF=0,pm.CHANNEL_TYPE_ADD=1,pm.CHANNEL_TYPE_FX=2,pm.CHANNEL_TYPE_SCENE=3,pm.HARDWAREGROUP_OFF=0,pm.HARDWAREGROUP_SOLO=1,pm.HARDWAREGROUP_EXCLUDE=2,pm.MAP_NORMAL=0,pm.MAP_ALT1=1,pm.MAP_ALT2=2,pm.demoClipNames=["TestFrame","SolidColor","ColorSineBar","ColorSwirls","LineCosSin","SimpleSwirl","SinSpiral","SineParticles","DiSinSwirl","HexifyRadial","SinCosTan"],pm.demoHardware=["ApHardwareTest","Grid+zLayer","RanZGrid"],pm.getVariableTypeFromShorthand=function(e){var t;switch(e){case"i":t="int";break;case"f":t="float";break;case"t":t="sampler2D";break;case"v2":t="vec2";break;case"v3":t="vec3";break;case"v4":t="vec4"}return t},pm.speed=.07,pm.useTransforms=!1,pm.usePodUniforms=!1,pm.pointCloud={},pm.pointGeometry={},pm.pointMaterial={},pm.pointSize=20,pm.material=!1,pm.shaderCount=-1,pm.init=function(e,t,i){pm.shaderCount=0;for(var r in pm.clips)pm.clips.hasOwnProperty(r)&&(pm.shaderCount++,pm.clips[r].id=pm.shaderCount);for(i=i||Math.pow(128,2),pm.simSize=4;Math.pow(pm.simSize,2)<i;)pm.simSize*=2;pm.ports=new pm.PortManager,pm.hardware=new pm.HardwareManager,pm.channels=new pm.ChannelManager,pm.app=new pm.AppManager(e,t),pm.ports.init(),pm.hardware.init(),pm.channels.init(),pm.app.init(),pm.appSize||pm.setSize(600,400)},pm.dataSetLength=null,pm.updateShader=!1,pm.updateFresh=!1,pm.updateShaderLimiter=0,pm.update=function(){pm.app?pm.ready&&((!pm.updateShader||pm.updateShaderLimiter<4)&&pm.updateShaderLimiter>0?(pm.app.update(),pm.ports.update(),pm.hardware.update(),pm.channels.update()):(pm.app.updateMainSourceShader(),pm.app.update(),pm.updateShaderLimiter=0,pm.updateShader=!1,pm.updateFresh=!1),pm.updateShaderLimiter++):console.log("AP Error: Need to call pm.init before pm.update.")},pm.pointPosition=[-400,-400,0],pm.setPointPosition=function(e,t,i){pm.pointPosition=[e,t,i],pm.pointCloud.position&&(pm.pointCloud.position={x:e,y:t,z:i})},pm.appSize,pm.setSize=function(e,t){if(pm.appSize=[e,t],pm.app){pm.app.glWidth=e,pm.app.glHeight=t,pm.app.readPixels&&(pm.app.pixels=new Uint8Array(4*pm.app.glWidth*pm.app.glHeight)),pm.app.renderer.setSize(pm.app.glWidth,pm.app.glHeight);var i=pm.pointSize;i*=e*t*1e-5,pm.pointMaterial.uniforms.u_pointSize.value=i}},pm.importShader=function(e,t){pm.app.importShader(e,t)},pm.generateShader=function(){pm.app.updateMainSourceShader()},pm.simpleSetup=function(e){e.mix=e.mix||1,e.channel=e.channel||1;for(var t=[],i=0;i<e.ids.length;i++)t[i]=new pm.Clip({id:e.ids[i]});var r=[];r[0]=new pm.Pod({clips:t});var p=new pm.Channel({mix:e.mix,pods:r});pm.channels.setChannel(e.channel,p),pm.generateShader()},pm.updateNodePoints=function(){pm.app.updateGeometry(),pm.app.generateCoordsMap(),pm.app.createNodePointCloud()},pm.get=function(e,t,i,r){return t?pm.getUniform(e,t,i,r).value:pm.material.uniforms[e].value},pm.set=function(e,t,i,r,p){i?(pm.getUniform(e,i,r,p).value=t,pm.setObjProperty(e,t,i,r,p)):pm.material.uniforms[e].value=t},pm.getUniform=function(e,t,i,r){var p="_"+t;return i&&(p+="_"+i,r&&(p+="_"+r)),pm.material.uniforms[p+"_"+e]},pm.getObj=function(e,t,i){var r=pm.channels.channels[e-1];return t&&(r=r.pods[t-1],i&&(r=r.clips[i-1])),r},pm.setObj=function(e,t,i,r){i?r?pm.channels.channels[t-1].pods[i-1].clips[r-1]=e:pm.channels.channels[t-1].pods[i-1]=e:pm.channels.channels[t-1]=e},pm.getObjProperty=function(e,t,i,r){var p=pm.getObj(t,i,r);return p[e]},pm.setObjProperty=function(e,t,i,r,p){var a=pm.getObj(i,r,p);a[e]=t},pm.load=function(e){pm.channels.channels=e,pm.updateShader=!0,pm.updateFresh=!0},pm.stringify=function(){return JSON.stringify(pm.channels.channels)},pm.AppManager=function(e,t){this.glWidth=0,this.glHeight=0,this.sceneMain=e,this.renderer=t,this.cameraRTT,this.sceneRTT,this.rtTextureA,this.rtTextureB,this.rtToggle=!0,this.controls,this.camera,this.geoX=[],this.geoY=[],this.passIndex=[],this.fragmentShader,this.time=0,this.pixels,this.render=!0,this.readPixels=!1,this.nodeTexture=THREE.ImageUtils.loadTexture("images/nodeflare250.png"),this.coordsMap,this.altMap1,this.altMap2,this.plane=new THREE.PlaneBufferGeometry(pm.simSize,pm.simSize),pm.pointGeometry=new THREE.Geometry},pm.AppManager.prototype={init:function(){this.rtTextureA=new THREE.WebGLRenderTarget(pm.simSize,pm.simSize,{minFilter:THREE.NearestMipMapNearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.rtTextureB=this.rtTextureA.clone(),this.cameraRTT=new THREE.OrthographicCamera(pm.simSize/-2,pm.simSize/2,pm.simSize/2,pm.simSize/-2,-1e4,1e4),this.sceneRTT=new THREE.Scene,pm.pointGeometry=new THREE.Geometry,pm.updateNodePoints(),this.readPixels&&(this.pixels=new Uint8Array(4*this.glWidth*this.glHeight))},update:function(){if(this.time+=pm.speed,this.render&&pm.ready&&(pm.material.uniforms._time.value=this.time,pm.material.uniforms._random.value=Math.random(),this.rtToggle?(pm.material.uniforms.u_prevCMap.value=this.rtTextureB,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureA,!0),pm.pointMaterial.uniforms.u_colorMap.value=this.rtTextureA):(pm.material.uniforms.u_prevCMap.value=this.rtTextureA,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureB,!0),pm.pointMaterial.uniforms.u_colorMap.value=this.rtTextureB),this.rtToggle=!this.rtToggle,this.updateClips(),this.readPixels)){this.renderer.render(this.sceneRTT,this.cameraRTT);var e=this.renderer.getContext();e.readPixels(0,0,this.glWidth,this.glHeight,e.RGBA,e.UNSIGNED_BYTE,this.pixels),this.renderer.clear()}},setSize:function(e,t){this.glWidth=e,this.glHeight=t},addPlanesForTesting:function(){testPlane=new THREE.PlaneBufferGeometry(2*pm.simSize,2*pm.simSize);var e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureA}},vertexShader:pm.shaders.SimpleTextureShader.vertexShader,fragmentShader:pm.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e);t.position.x=-600,this.sceneMain.add(t),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureB}},vertexShader:pm.shaders.SimpleTextureShader.vertexShader,fragmentShader:pm.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e),t.position.x=-900,this.sceneMain.add(t),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.coordsMap}},vertexShader:pm.shaders.SimpleTextureShader.vertexShader,fragmentShader:pm.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e),t.position.x=-1200,this.sceneMain.add(t)},importShader:function(e,t){function i(e){return e.localeCompare("#ifdef GL_ES")>-1?!0:e.localeCompare("#endif")>-1?!0:e.localeCompare("uniform float time")>-1?!0:e.localeCompare("uniform float random")>-1?!0:e.localeCompare("uniform vec2 resolution")>-1?!0:e.localeCompare("precision highp float")>-1?!0:!1}var r=0,p=!1,a="",n=0,s=0,o={};o.constants=[],o.fragmentFunctions=[];for(var m=t.split("\n"),l=0;l<m.length;l++){var c=m[l].trim();if(c=c.replace(/ +(?= )/g,""),c.length>0){var d=c.replace(/[^{]/g,"").length,h=c.replace(/[^}]/g,"").length;r+=d,r-=h,r>0&&(p=!0),p?(a+=c+"\n",0===r&&(p=!1,a.localeCompare("void main(")>-1?o.fragmentMain=a.slice(a.indexOf("{")+1,a.lastIndexOf("}")):(o.fragmentFunctions[n]=a,n++),a="")):i(c)||(o.constants[s]=c,s++)}}pm.shaderCount>-1&&(pm.clips[e]?o.id=pm.clips[e].id:(pm.shaderCount++,o.id=pm.shaderCount)),pm.clips[e]=o},updateClips:function(){for(var e=0;e<pm.channels.channels.length;e++){var t=pm.channels.channels[e];if(t&&t.pods)for(var i=0;i<t.pods.length;i++){var r=t.pods[i];if(r&&r.clips)for(var p=0;p<r.clips.length;p++){var a=r.clips[p];if(a&&pm.clips[a.id]){pm.material.uniforms["_"+(e+1)+"_"+(i+1)+"_"+(p+1)+"_time"].value+=a.speed*pm.speed;var n=pm.clips[a.id];n&&n.update&&pm.material&&n.update("_"+(e+1)+"_"+(i+1)+"_"+(p+1),pm.material.uniforms)}}}}},updateGeometry:function(){this.geoX=[],this.geoY=[],this.passIndex=[],pm.pointGeometry=new THREE.Geometry;var t=0;for(e=0;e<pm.ports.getPorts().length;e++){var r=pm.ports.getPort(e+1);if(r&&r.nodes)for(i=0;i<r.nodes.length;i++){var p=new THREE.Vector3;p.x=r.nodes[i].x||0,p.y=r.nodes[i].y||0,p.z=r.nodes[i].z||0,pm.pointGeometry.vertices.push(p);var a=pm.simSize,n=(t+1)%a;0===n&&(n=a);var s=(t+2-n)/a;this.geoX.push(n/a-.5/a),this.geoY.push(1-s/a-.5/a),this.passIndex.push(t),t++}}},generateCoordsMap:function(){for(var e=new Float32Array(4*Math.pow(pm.simSize,2)),t=0,i=1e11,r=0,p=1e11,a=0,n=1e11,s=0,o=0,m=e.length;m>o;o+=4){var l=0,c=0,d=0;pm.pointGeometry.vertices[t]?(l=pm.pointGeometry.vertices[t].x,c=pm.pointGeometry.vertices[t].y,d=pm.pointGeometry.vertices[t].z,i=Math.min(i,l),r=Math.max(r,l),p=Math.min(p,c),a=Math.max(a,c),n=Math.min(n,d),s=Math.max(s,d),e[o+3]=1,t++):e[o+3]=0,e[o+0]=l,e[o+1]=c,e[o+2]=d}pm.channels.setPodPos(1,new pm.PodPosition(i,p,n,r-i,a-p,s-n)),this.coordsMap=new THREE.DataTexture(e,pm.simSize,pm.simSize,THREE.RGBAFormat,THREE.FloatType),this.coordsMap.minFilter=THREE.NearestFilter,this.coordsMap.magFilter=THREE.NearestFilter,this.coordsMap.needsUpdate=!0,this.coordsMap.flipY=!0,this.altMap1=new THREE.DataTexture(e,pm.simSize,pm.simSize,THREE.RGBAFormat,THREE.FloatType),this.altMap1.minFilter=THREE.NearestFilter,this.altMap1.magFilter=THREE.NearestFilter,this.altMap1.needsUpdate=!0,this.altMap1.flipY=!0},createNodePointCloud:function(){function e(e,t){var i={};for(var r in e)e[r]&&(i[r]=e[r]);for(var p in t)t[p]&&(i[p]=t[p]);return i}var t={a_geoX:{type:"f",value:this.geoX},a_geoY:{type:"f",value:this.geoY},a_index:{type:"f",value:this.passIndex}},i={u_colorMap:{type:"t",value:this.rtTextureA},u_texture:{type:"t",value:this.nodeTexture}};pm.pointMaterial=new THREE.ShaderMaterial({uniforms:e(i,pm.shaders.PointCloudShader.uniforms),attributes:e(t,pm.shaders.PointCloudShader.attributes),vertexShader:pm.shaders.PointCloudShader.vertexShader,fragmentShader:pm.shaders.PointCloudShader.fragmentShader,depthTest:!1,transparent:!0});var r="PM Nodes";this.sceneMain.getObjectByName(r)&&this.sceneMain.remove(pm.pointCloud),pm.pointCloud=new THREE.PointCloud(pm.pointGeometry,pm.pointMaterial),pm.pointCloud.sortParticles=!0,pm.pointCloud.name=r,pm.pointPosition&&(pm.pointCloud.position.x=pm.pointPosition[0],pm.pointCloud.position.y=pm.pointPosition[1],pm.pointCloud.position.z=pm.pointPosition[2]),this.sceneMain.add(pm.pointCloud),pm.pointGeometry.vertices.length>0&&(console.log("PM Nodes: "+pm.pointGeometry.vertices.length),pm.ready=!0)},updateMainSourceShader:function(){var e={_time:{type:"f",value:this.time},_random:{type:"f",value:Math.random()},u_coordsMap:{type:"t",value:this.coordsMap},u_prevCMap:{type:"t",value:this.rtTextureB},u_mapSize:{type:"f",value:pm.simSize}},t=pm.channels.generateSourceShader(),i="";pm.usePodUniforms&&(e.u_pos_id={type:"i",value:0},e.u_pos_x={type:"f",value:0},e.u_pos_y={type:"f",value:0},e.u_pos_z={type:"f",value:0},e.u_pos_w={type:"f",value:0},e.u_pos_h={type:"f",value:0},e.u_pos_d={type:"f",value:0},i+="uniform int u_pos_id;\n",i+="uniform float u_pos_x;\n",i+="uniform float u_pos_y;\n",i+="uniform float u_pos_z;\n",i+="uniform float u_pos_w;\n",i+="uniform float u_pos_h;\n",i+="uniform float u_pos_d;\n");for(var r in t.uniforms){var p=pm.getVariableTypeFromShorthand(t.uniforms[r].type);i+="uniform "+p+" "+r+";\n",e[r]=t.uniforms[r]}if(this.altMap1&&(i+="uniform sampler2D u_altMap1; vec4 ap_alt1; \n",e.u_altMap1={type:"t",value:this.altMap1}),this.altMap2&&(i+="uniform sampler2D u_altMap2; vec4 ap_alt2; \n",e.u_altMap2={type:"t",value:this.altMap2}),!pm.updateFresh&&pm.material)for(r in e)pm.material.uniforms[r]&&(e[r].value=pm.material.uniforms[r].value);this.fragmentShader=pm.MainShader.fragmentShader,this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERS",t.fragmentMain),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERFUNCTIONS",t.fragmentFunctions),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERUTILS",pm.shaders.ShaderUtils+i),this.fragmentShader=this.minFragmentShader(this.fragmentShader),pm.material=new THREE.ShaderMaterial({uniforms:e,vertexShader:pm.shaders.SimpleTextureShader.vertexShader,fragmentShader:this.fragmentShader}),pm.material.uniforms.u_coordsMap.value=this.coordsMap,pm.material.uniforms.u_prevCMap.value=this.rtTextureB,this.altMap1&&(pm.material.uniforms.u_altMap1.value=this.altMap1),this.altMap2&&(pm.material.uniforms.u_altMap2.value=this.altMap2);var a="SourceQuad",n=this.sceneRTT.getObjectByName(a);n&&this.sceneRTT.remove(n);var s=new THREE.Mesh(this.plane,pm.material);s.position.z=-100,s.name=a,this.sceneRTT.add(s)},minFragmentShader:function(e){return e=e.replace(/ap_alt/g,"_0"),e=e.replace(/ap_/g,"_"),e=e.replace(/_xyz/g,"_1"),e=e.replace(/hsv2rgb/g,"_2"),e=e.replace(/rgb2hsv/g,"_3"),e=e.replace(/offsetPos/g,"_4"),e=e.replace(/_rgb/g,"_5"),e=e.replace(/_hsv/g,"_6"),e=e.replace(/resolution/g,"_7"),e=e.replace(/superFunction/g,"_8"),e=e.replace(/checkBounds/g,"_9"),e=e.replace(/returnColor/g,"_91"),e=e.replace(/getPodSize/g,"_92"),e=e.replace(/getPodPos/g,"_93"),e=e.replace(/_lastRgb/g,"_94"),e=e.replace(/getPodScale/g,"_95"),e=e.replace(/getPodOffset/g,"_96")}},pm.ChannelManager=function(){this.channels=[],this.podpositions=[]},pm.ChannelManager.prototype={init:function(){},update:function(){},generateSourceShader:function(){function e(e,t){var i=e.match(new RegExp("^(?:\\w+\\W+){"+--t+"}(\\w+)"));return i&&i[1]}for(var t={},i={},r={},p={},a=this.generateSizingFunctions(),n="",s="",o="",m={},l="",c=0;c<this.channels.length;c++){var d=this.channels[c];d.address="_"+(c+1);var h=!1;if(d.type===pm.CHANNEL_TYPE_FX&&(h=!0),s+="if(_channel_mix>0.){ \n",t[d.address+"_mix"]={type:"f",value:d.mix},d&&d.pods)for(var f=0;f<d.pods.length;f++){var _=d.pods[f];if(_){_.address=d.address+"_"+(f+1),t[_.address+"_mix"]={type:"f",value:_.mix},t[_.address+"_blend"]={type:"f",value:_.blend};var g=!1;if(_.clips&&_.clips.length)for(var v=0;v<_.positionIds.length;v++){s+="//-- \n";var x=this.getPodPos(_.positionIds[v]);if(m!==x){m=x;var S="vec2("+x.w+", "+x.h+");";pm.usePodUniforms&&(S="vec2(getPodSize("+_.positionIds[v]+").x, getPodSize("+_.positionIds[v]+").y);"),l!==S&&(l=S,s+="resolution = "+S+" \n"),s+="ap_xyz = offsetPos(ap_xyz2, "+_.positionIds[v]+", ap_xyz.w);\n"}for(s+="if(_pod_mix > 0. && checkBounds(ap_xyz2, "+_.positionIds[v]+") > 0.){ \n",g=!0,u=0;u<_.clips.length;u++){var y=_.clips[u];if(y){var P=pm.clips[y.id];if(P){if(!r[_.clips[u].id]){r[_.clips[u].id]=!0;for(var T in P.constants)i[T]||(i[T]=1,a+=P.constants[T]+"\n");if(a+="\n",P.fragmentFunctions)for(var E=0;E<P.fragmentFunctions.length;E++){var b=P.fragmentFunctions[E].trim();b=e(b,1)+e(b,2)+e(b,3)+e(b,4)+e(b,5),p[b]||(p[b]=!0,a+=P.fragmentFunctions[E]+"\n")}n+="else if(id == "+P.id+"){\n",n+=P.fragmentMain.replace("gl_FragColor","returnColor"),n+="\n",n=n.replace(/gl_FragCoord/g,"ap_xyz"),n+="\n}\n"}if(y.address=_.address+"_"+(u+1),y.id.length>0&&P){for(var M in P.params)pm.setObjProperty(M,P.params[M].value,c+1,f+1,u+1),t[y.address+"_"+M]={type:"f",value:P.params[M].value};for(var z in P.properties)t[y.address+"_"+z]=P.properties[z];P.init&&P.init(y.address,t),t[y.address+"_mix"]={type:"f",value:y.mix},t[y.address+"_blend"]={type:"f",value:y.blend},t[y.address+"_time"]={type:"f",value:pm.app.time};for(var C=["0.","0.","0.","0.","0.","0.","0.","0.","0."],N=0;N<C.length;N++)P.params&&P.params["p"+(N+1)]&&(C[N]=y.address+"_p"+(N+1));o="",y.posMap==pm.MAP_ALT1&&pm.app.altMap1&&(o+="ap_xyz = offsetPos(ap_alt1, "+_.positionIds[v]+", ap_xyz.w);\n"),o+="ap_rgb2 = superFunction(_clip_mix, "+P.id+", _fxIn, _clip_time, "+C[0]+","+C[1]+","+C[2]+","+C[3]+","+C[4]+","+C[5]+","+C[6]+","+C[7]+","+C[8]+");",o=o.replace(/gl_FragCoord/g,"ap_xyz");var R=pm.clips[y.id].fx;0===u?(o+="ap_rgb = ap_rgb2; \n",R||h?o+="ap_rgb = mix(ap_p, ap_rgb2, _clip_mix); \n":(g=h,o+="ap_rgb = ap_rgb * (_clip_mix); \n")):R||h?o+="ap_rgb = mix(ap_rgb, ap_rgb2, _clip_mix); \n":(o+="ap_rgb2 = ap_rgb2 * (_clip_mix); \n",o+="ap_rgb = blend(ap_rgb2, ap_rgb, _clip_blend); \n",g=h),o=o.replace(/_clip_/g,y.address+"_"),o=o.replace(/__/g,y.address+"_"),o=0===u?o.replace(/_fxIn/g,"ap_p"):o.replace(/_fxIn/g,"ap_rgb"),s+=o}}else console.log("AP Error - shader not found: "+y.id)}}g?s+="ap_p = mix(ap_p, ap_rgb, _pod_mix); \n":0===f?s+="ap_p = ap_rgb * (_pod_mix); \n":(s+="ap_rgb = ap_rgb * (_pod_mix); \n",s+="ap_p = blend(ap_p, ap_rgb, _pod_blend); \n"),s+="}"}s=s.replace(/_pod_/g,_.address+"_")+"\n"}}0===c?s+="ap_c = ap_p = ap_p * (_channel_mix); \n":h?s+="ap_c = mix(ap_c, ap_p, _channel_mix); \n":(s+="ap_p = ap_p * (_channel_mix); \n",s+="ap_c = blend(ap_c, ap_p, 1.); \n"),s+="}",s=s.replace(/_channel_/g,d.address+"_")+"\n"}return n=n.slice(5,n.length),n="vec4 returnColor = vec4(0.,0.,0.,0.); if(_mi == 0.){return vec3(0.,0.,0.);} \n"+n,n+="return max(min(vec3(returnColor.x, returnColor.y, returnColor.z), vec3(1.0)), vec3(0.0)); \n",n="vec3 superFunction(float _mi, int id, vec3 _fxIn, float time, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9) { \n"+n+"}\n",a+=n,pm.app.altMap1&&(s="ap_alt1 = texture2D( u_altMap1, v_vUv);"+s),pm.app.altMap2&&(s="ap_alt2 = texture2D( u_altMap2, v_vUv);"+s),pm.dataSetLength&&pm.dataSetLength>0&&(a="uniform float data[ "+pm.dataSetLength+" ]; \n"+a),{uniforms:t,fragmentFunctions:a,fragmentMain:s+"\n"}},generateSizingFunctions:function(){var e="";pm.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_x, u_pos_y, u_pos_z);\n",e+="}");for(var t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].x+","+this.podpositions[t].y+","+this.podpositions[t].z+");\n",e+="}\n";pm.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodPos(int d) { \n"+e+"}\n";var i=e;for(e="",pm.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_w, u_pos_h, u_pos_d);\n",e+="}"),t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].w+","+this.podpositions[t].h+","+this.podpositions[t].d+");\n",e+="}\n";if(pm.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodSize(int d) { \n"+e+"}\n",i+=e,pm.useTransforms){for(e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].xt+","+this.podpositions[t].yt+","+this.podpositions[t].zt+");\n",e+="}\n";for(e=e.slice(5,e.length),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodOffset(int d) { \n"+e+"}\n",i+=e,e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec4("+this.podpositions[t].xs+","+this.podpositions[t].ys+","+this.podpositions[t].zs+","+this.podpositions[t].flipmode+");\n",e+="}\n";e=e.slice(5,e.length),e="vec4 p = vec4(0.,0.,0.,0.); \n"+e,e+="return p; \n",e="vec4 getPodScale(int d) { \n"+e+"}\n",i+=e}return i+=["float checkBounds(vec4 b, int p)","{","vec3 s = getPodPos(p);","if(b.x >= s.x && b.y >= s.y && b.z >= s.z){ ","vec3 e = getPodSize(p);","if(b.x <= (e.x + s.x) && b.y <= (e.y + s.y) && b.z <= (e.z + s.z)) {","	return 1.;","}}","	return 0.;","}"].join("\n"),i+="vec4 offsetPos(vec4 b, int p, float w){\n",i+="vec3 c = getPodPos(p);\n",i+="float x = b.x - c.x;\n",i+="float y = b.y - c.y;\n",i+="float z = b.z - c.z;\n",i+="float t = x;\n",pm.useTransforms&&(i+="vec4 s = getPodScale(p);\n",i+="if(s.w == 1.){",i+="x=y;y=t;\n",i+="}else if(s.w == 2.){",i+="x=z;z=t;\n",i+="}else if(s.w == 3.){",i+="t=y;y=z;z=t;\n",i+="}\n",i+="vec3 d = getPodOffset(p);\n",i+="vec3 e = getPodSize(p);\n",i+="x += (e.x * 8. * (d.x - .5));\n",i+="y += (e.y * 8. * (d.y - .5));\n",i+="z += (e.z * 8. * (d.z - .5));\n",i+="x += (b.x - (e.x * .5 + c.x)) * (1.-(s.x * 2.))*8.;\n",i+="y += (b.y - (e.y * .5 + c.y)) * (1.-(s.y * 2.))*8.;\n",i+="z += (b.z - (e.z * .5 + c.z)) * (1.-(s.z * 2.))*8.;\n"),i+="return vec4(x, y, z, w);\n",i+="}\n"},setChannel:function(e,t){this.channels[e-1]=t},getChannel:function(e){return this.channels[e-1]},getChannels:function(){return this.channels},clearChannel:function(e){delete this.channels[e-1]},clearAllChannels:function(){this.channels=[]},clearAllPodsInChannel:function(e){delete this.channels[e-1].pods},setPodPos:function(e,t){this.podpositions[e-1]=t},getPodPos:function(e){return this.podpositions[e-1]?this.podpositions[e-1]:this.podpositions[0]},clearPodPos:function(e){delete this.podpositions[e-1]},clearAllPodPos:function(){this.podpositions=[]},setClip:function(e,t,i,r){return this.channels[e-1]?void(this.channels[e-1].pods[t-1]?this.channels[e-1].pods[t-1].clips[i-1]=r:this.channels[e-1].pods[t-1]=new Pod(1,1,pm.BLEND.Add,[r])):!1},clearClip:function(e,t,i){delete this.channels[e-1].pods[t-1].clips[i-1]},clearAllClipsInPod:function(e,t){delete this.channels[e-1].pods[t-1].clips}},pm.HardwareManager=function(){},pm.HardwareManager.prototype={init:function(){},update:function(){},importNodes:function(e,t,i,r,p,a){t=t||0,i=i||0,r=r||0,p=p||0,e.scale=e.scale||1;var n=a||e.scale;for(var s in e.hardwareunit){var o=e.hardwareunit[s];for(var m in o.ports){var l=o.ports[m];for(var c in l.nodes){var d=l.nodes[c];d.x=d.x||0,d.y=d.y||0,d.z=d.z||0,d.x*=n,d.y*=n,d.z*=n,d.x+=i,d.y+=r,d.z+=p}pm.ports.setNodes(l.portid+t,l.nodes)}}},addTestGrid:function(t,r,p){var a=[];for(e=0;e<24;e++)for(i=0;i<14;i++){var n={};n.x=30*e+r,n.y=30*i+p,n.z=0,a.push(n)}pm.ports.setNodes(t,a)},addTestPortsGrid:function(t,r,p){var a=830,n=1100,s=0,o=0;for(u=0;u<15;u++){var m=[];for(e=0;e<18;e++)for(i=0;i<24;i++){var l={};l.x=.26*(40*e+s-650+r),l.y=.26*(40*i+o+p),l.z=300*Math.random()-150,m.push(l)}var c=new pm.Port("port name "+c,pm.PORT_TYPE_KINET_1,null,null,m);pm.ports.setPort(u+t,c),s+=a,(u+2)%5==1&&(s=0,o+=n)}},addTestPortsGrid2:function(t,r,p){var a=[];for(e=0;e<70;e++)for(i=0;i<38;i++){var n={};n.x=20*e-340+r,n.y=20*i+30+p,a.push(n)}var s=new pm.Port("port name "+s,pm.PORT_TYPE_KINET_1,null,null,a);pm.ports.setPort(t,s)},addTestPortsGrid3:function(t,r,p){var a=[],n={};for(e=0;e<70;e++)for(i=0;i<38;i++)n={},n.x=20*e-340+r,n.y=20*i+30+p-1,a.push(n);var s=new pm.Port("port name "+s,pm.PORT_TYPE_KINET_1,null,null,a);for(pm.ports.setPort(t,s),a=[],e=0;e<70;e++)for(i=0;i<38;i++)(i+2)%2==1&&(n={},n.x=20*e-340+r,n.y=20*i+30+p,n.z=110,a.push(n));for(s=new pm.Port("port name "+s,pm.PORT_TYPE_KINET_1,null,null,a),pm.ports.setPort(t+1,s),a=[],e=0;e<70;e++)for(i=0;i<38;i++)(i-1)%3==1&&(e-1)%2==1&&(n={},n.x=20*e-340+r-1,n.y=20*i+30+p-1,n.z=210,a.push(n));s=new pm.Port("port name "+s,pm.PORT_TYPE_KINET_1,null,null,a),pm.ports.setPort(t+2,s)},addSimpleNodeGrid:function(t,r,p,a,n,s,o){o||(o=pm.ports.ports.length+1);var m=1e11,l=0,c=1e11,d=0,h=[];for(e=0;e<a;e++)for(i=0;i<n;i++){var u={};u.x=e*s+t,u.y=i*s+r,u.z=p,h.push(u),m=Math.min(m,u.x),l=Math.max(l,u.x),c=Math.min(c,u.y),d=Math.max(d,u.y)}var f=new pm.Port("port name "+o,pm.PORT_TYPE_KINET_1,null,null,h);pm.ports.setPort(o,f),o>1&&pm.channels.setPodPos(o,new pm.PodPosition(m,c,p,l-m,d-c,p+1))}},pm.PortManager=function(){this.ports=[]},pm.PortManager.prototype={init:function(){},update:function(){},getNodes:function(e){return this.ports[e-1].nodes},getNodeCount:function(e){return this.ports[e-1].nodes.length},setNodes:function(e,t){this.ports[e-1]||(this.ports[e-1]={}),this.ports[e-1].nodes=t},setNodesOffset:function(e,t,i,r,p){this.ports[e-1]||(this.ports[e-1]={});for(var a=0;a<t.length;a++)t[a].x+=i,t[a].y+=r,t[a].z+=p;this.ports[e-1].nodes=t},setNodesFlat:function(e,t,i){this.ports[e-1]||(this.ports[e-1]={});for(var r=0;r<t.length;r++)t[r].z=i;this.ports[e-1].nodes=t},clearNodes:function(e){delete this.ports[e-1].nodes},setPort:function(e,t){this.ports[e-1]=t},getPort:function(e){return this.ports[e-1]},getPorts:function(){return this.ports},addPortDetails:function(e,t){if(!this.ports[e-1])return void console.log("Error: Cannot add details to unexisting Port "+e);var i=this.ports[e-1].nodes,r={};for(var p in this.ports[e-1])this.ports[e-1][p]&&(r[p]=this.ports[e-1][p]);for(var a in t)t[a]&&(r[a]=t[a]);this.ports[e-1]=r,this.ports[e-1].nodes=i},clearPort:function(e){delete this.ports[e-1]},clearAllPorts:function(){delete this.ports,this.ports=[]}},pm.Channel=function(e){this.name=e.name,this.type=e.type||pm.CHANNEL_TYPE_ADD,this.mix=e.mix||0,this.blend=e.blend||pm.BLEND.Add,this.pods=e.pods||[]},pm.Clip=function(e){this.id=e.id,this.mix=e.mix||1,this.blend=e.blend||pm.BLEND.Add,this.posMap=e.posMap||pm.MAP_NORMAL,this.speed=e.speed||1,this.p1=e.p1||0,this.p2=e.p2||0,this.p3=e.p3||0,this.p4=e.p4||0,this.p5=e.p5||0,this.p6=e.p6||0,this.p7=e.p7||0,this.p8=e.p8||0,this.p9=e.p9||0},pm.Clip.prototype={setParams:function(e,t,i,r,p,a,n,s,o){this.p1=e,this.p2=t,this.p3=i,this.p4=r,this.p5=p,this.p6=a,this.p7=n,this.p8=s,this.p9=o}},pm.Pod=function(e){this.positionIds=e.positionIds||[1],this.mix=e.mix||1,this.blend=e.blend||pm.BLEND.Add,this.clips=e.clips||[]},pm.PodPosition=function(e,t,i,r,p,a,n,s,o,m,l,c,d){this.x=e||0,this.y=t||0,this.z=i||0,this.w=r||0,this.h=p||0,this.d=a||0,this.xt=n||.5,this.yt=s||.5,this.zt=o||.5,this.xs=m||.5,this.ys=l||.5,this.zs=c||.5,this.flipmode=d||0},pm.Port=function(e,t,i,r,p){this.name=e,this.type=t,this.address=i||"",this.nodes=p||[],this.hardwarePort=r||1},pm.MainShader={fragmentShader:["#INCLUDESHADERUTILS","precision mediump float;","float ap_index;","vec4 ap_xyz;","vec4 ap_xyz2;","vec3 ap_lastRgb;","vec3 ap_rgb = vec3(0.);","vec3 ap_hsv;","vec3 ap_rgb2;","vec4 ap_rgbV4;","vec3 ap_c = vec3(0.);","vec3 ap_p = vec3(0.);","vec2 resolution;","float random;","varying vec2 v_vUv;","uniform float _time;","uniform float _random;","uniform float u_mapSize;","uniform sampler2D u_coordsMap;","uniform sampler2D u_prevCMap;","#define picu  31.006276680299820175476315067101 //pi cubed, pi^3","#define pisq  9.8696044010893586188344909998762 //pi squared, pi^2","#define twpi  6.283185307179586476925286766559  //two pi, 2*pi ","#define pi    3.1415926535897932384626433832795 //pi","#define prpi  1.4396194958475906883364908049738 //pi root of pi","#define trpi  1.0471975511965977461542144610932 //one third of pi, pi/3","#define lgpi  0.4971498726941338543512682882909 //log(pi)       ","#define rcpi  0.31830988618379067153776752674503// reciprocal of pi  , 1/pi  ","#INCLUDESHADERFUNCTIONS","void main() {","random = rand(vec2(gl_FragCoord[0] * (gl_FragCoord[2] + 1.), gl_FragCoord[1] * _random) * (_time * 0.0001));","ap_rgb = vec3(0.0);","ap_xyz2 = ap_xyz = texture2D( u_coordsMap, v_vUv);","if(ap_xyz[3] == 0.0){ discard; }","ap_index = ((1.0 - v_vUv.y) * u_mapSize * u_mapSize + v_vUv.x * u_mapSize);","ap_lastRgb = vec3(texture2D( u_prevCMap, v_vUv));","#INCLUDESHADERS","gl_FragColor = vec4(ap_c, 1.0);","}"].join("\n")},pm.shaders.PointCloudShader={uniforms:{u_pointSize:{type:"f",value:pm.pointSize}},attributes:{},vertexShader:["uniform float u_pointSize;","attribute float a_geoX;","attribute float a_geoY;","attribute float a_index;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","v_geoX = a_geoX;","v_geoY = a_geoY;","v_index = a_index;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_PointSize = u_pointSize * ( 300.0 / length( mvPosition.xyz ) );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform sampler2D u_texture;","uniform sampler2D u_colorMap;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","gl_FragColor = texture2D( u_colorMap, vec2( v_geoX, v_geoY )) * texture2D( u_texture, gl_PointCoord);","}"].join("\n")},pm.shaders.ShaderUtils=["vec3 rgb2hsv(vec3 c){","vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);"," vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","float d = q.x - min(q.w, q.y);","float e = 1.0e-10;","return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 hsv2rgb(vec3 c) {","	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","vec3 blend(vec3 c1, vec3 c2, float type)","{","if(type == 0.0){ return c1; }else						","if(type == 1.0){ return c1 + c2; }else					","if(type == 2.0){ return c1 - c2; }else					","if(type == 3.0){ return min(c1, c2); }else				","if(type == 4.0){ return max(c1, c2); }else				","if(type == 5.0){ return abs(c2 - c1); }else				","if(type == 6.0){ return c1 + c2 - 2.0 * c1 * c2; }else	","if(type == 7.0){ return c1 * c2; }else					","if(type == 8.0){ return (c1 + c2) - (c1 * c2); }else	","if(type == 9.0){ return vec3((c2.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c2.r) * (1.0 - c1.r)),(c2.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c2.g) * (1.0 - c1.g)),(c2.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c2.b) * (1.0 - c1.b))); }else","if(type == 10.0){ return vec3((c1.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c1.r) * (1.0 - c2.r)),(c1.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c1.g) * (1.0 - c2.g)),(c1.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c1.b) * (1.0 - c2.b))); }else","if(type == 11.0){ return vec3((c1.r <= 0.5) ? (c2.r - (1.0 - 2.0 * c1.r) * c2.r * (1.0 - c2.r)) : (((c1.r > 0.5) && (c2.r <= 0.25)) ? (c2.r + (2.0 * c1.r - 1.0) * (4.0 * c2.r * (4.0 * c2.r + 1.0) * (c2.r - 1.0) + 7.0 * c2.r)) : (c2.r + (2.0 * c1.r - 1.0) * (sqrt(c2.r) - c2.r))),(c1.g <= 0.5) ? (c2.g - (1.0 - 2.0 * c1.g) * c2.g * (1.0 - c2.g)) : (((c1.g > 0.5) && (c2.g <= 0.25)) ? (c2.g + (2.0 * c1.g - 1.0) * (4.0 * c2.g * (4.0 * c2.g + 1.0) * (c2.g - 1.0) + 7.0 * c2.g)) : (c2.g + (2.0 * c1.g - 1.0) * (sqrt(c2.g) - c2.g))),(c1.b <= 0.5) ? (c2.b - (1.0 - 2.0 * c1.b) * c2.b * (1.0 - c2.b)) : (((c1.b > 0.5) && (c2.b <= 0.25)) ? (c2.b + (2.0 * c1.b - 1.0) * (4.0 * c2.b * (4.0 * c2.b + 1.0) * (c2.b - 1.0) + 7.0 * c2.b)) : (c2.b + (2.0 * c1.b - 1.0) * (sqrt(c2.b) - c2.b)))); }else","if(type == 12.0){ return vec3((c1.r == 1.0) ? 1.0 : min(1.0, c2.r / (1.0 - c1.r)),(c1.g == 1.0) ? 1.0 : min(1.0, c2.g / (1.0 - c1.g)),(c1.b == 1.0) ? 1.0 : min(1.0, c2.b / (1.0 - c1.b))); }else","if(type == 13.0){ return vec3((c1.r == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.r) / c1.r)),(c1.g == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.g) / c1.g)), (c1.b == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.b) / c1.b))); }else","if(type == 14.0){ return (c1 + c2) - 1.0; }else","if(type == 15.0){ return 2.0 * c1 + c2 - 1.0; }else","if(type == 16.0){ return vec3((c1.r <= 0.5) ? (1.0 - (1.0 - c2.r) / (2.0 * c1.r)) : (c2.r / (2.0 * (1.0 - c1.r))),(c1.g <= 0.5) ? (1.0 - (1.0 - c2.g) / (2.0 * c1.g)) : (c2.g / (2.0 * (1.0 - c1.g))),(c1.b <= 0.5) ? (1.0 - (1.0 - c2.b) / (2.0 * c1.b)) : (c2.b / (2.0 * (1.0 - c1.b)))); }else","if(type == 17.0){ return vec3((c1.r > 0.5) ? max(c2.r, 2.0 * (c1.r - 0.5)) : min(c2.r, 2.0 * c1.r), (c1.r > 0.5) ? max(c2.g, 2.0 * (c1.g - 0.5)) : min(c2.g, 2.0 * c1.g),(c1.b > 0.5) ? max(c2.b, 2.0 * (c1.b - 0.5)) : min(c2.b, 2.0 * c1.b)); }else","{ return c1 + c2; }								","}","float rand(vec2 co)","{","  highp float a = 12.9898;","  highp float b = 78.233;","  highp float c = 43758.5453;","  highp float dt= dot(co.xy ,vec2(a,b));","  highp float sn= mod(dt,3.14);","  return fract(sin(sn) * c);","}"].join("\n"),pm.shaders.SimpleTextureShader={uniforms:{u_texture:{type:"t",value:null}},vertexShader:["varying vec2 v_vUv;","void main() {","v_vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 v_vUv;","uniform sampler2D u_texture;","void main() {","	gl_FragColor = texture2D( u_texture, v_vUv );","}"].join("\n")};
