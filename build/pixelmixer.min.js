var PMX={REVISION:"1"};PMX.ready=!1,PMX.simSize,PMX.shaders={},PMX.clips={},PMX.imported={},PMX.BLEND={},PMX.BLEND.OFF=0,PMX.BLEND.Add=1,PMX.BLEND.Subtract=2,PMX.BLEND.Darkest=3,PMX.BLEND.Lightest=4,PMX.BLEND.Difference=5,PMX.BLEND.Exclusion=6,PMX.BLEND.Multiply=7,PMX.BLEND.Screen=8,PMX.BLEND.Overlay=9,PMX.BLEND.HardLight=10,PMX.BLEND.SoftLight=11,PMX.BLEND.Dodge=12,PMX.BLEND.Burn=13,PMX.BLEND.LinearBurn=14,PMX.BLEND.LinearLight=15,PMX.BLEND.VividLight=16,PMX.BLEND.PinLight=17,PMX.BLEND.Fx=1,PMX.BLENDS=["Add","Substract","Darkest","Lightest","Difference","Exclusion","Multiply","Screen","Overlay","HardLight","SoftLight","Dodge","Burn","LinearBurn","LinearLight","VividLight","PinLight"],PMX.PORT_TYPE_OFF=0,PMX.PORT_TYPE_KINET_1=1,PMX.PORT_TYPE_KINET_2=2,PMX.PORT_TYPE_KINET_3=3,PMX.PORT_TYPE_KINET_4=4,PMX.PORT_TYPE_DMX_1=5,PMX.PORT_TYPE_DMX_2=6,PMX.PORT_TYPE_DMX_3=7,PMX.PORT_TYPE_LASER_1=8,PMX.CHANNEL_TYPE_OFF=0,PMX.CHANNEL_TYPE_ADD=1,PMX.CHANNEL_TYPE_FX=2,PMX.CHANNEL_TYPE_SCENE=3,PMX.HARDWAREGROUP_OFF=0,PMX.HARDWAREGROUP_SOLO=1,PMX.HARDWAREGROUP_EXCLUDE=2,PMX.MAP_NORMAL=0,PMX.MAP_ALT1=1,PMX.MAP_ALT2=2,PMX.demoClipNames=["TestFrame","SolidColor","ColorSineBar","ColorSwirls","LineCosSin","SimpleSwirl","SinSpiral","SineParticles","DiSinSwirl","HexifyRadial","SinCosTan"],PMX.demoHardware=["ApHardwareTest","Grid+zLayer","RanZGrid"],PMX.getVariableTypeFromShorthand=function(e){var t;switch(e){case"i":t="int";break;case"f":t="float";break;case"t":t="sampler2D";break;case"v2":t="vec2";break;case"v3":t="vec3";break;case"v4":t="vec4"}return t},PMX.speed=.07,PMX.useTransforms=!1,PMX.usePodUniforms=!1,PMX.pointCloud={},PMX.pointGeometry={},PMX.pointMaterial={},PMX.pointSize=20,PMX.material=!1,PMX.shaderCount=-1,PMX.init=function(e,t,i){PMX.shaderCount=0;for(var r in PMX.clips)PMX.clips.hasOwnProperty(r)&&(PMX.shaderCount++,PMX.clips[r].id=PMX.shaderCount);for(i=i||Math.pow(128,2),PMX.simSize=4;Math.pow(PMX.simSize,2)<i;)PMX.simSize*=2;PMX.ports=new PMX.PortManager,PMX.hardware=new PMX.HardwareManager,PMX.channels=new PMX.ChannelManager,PMX.app=new PMX.AppManager(e,t),PMX.ports.init(),PMX.hardware.init(),PMX.channels.init(),PMX.app.init(),PMX.appSize||PMX.setSize(600,400)},PMX.dataSetLength=null,PMX.updateShader=!1,PMX.updateFresh=!1,PMX.updateShaderLimiter=0,PMX.update=function(){PMX.app?PMX.ready&&((!PMX.updateShader||PMX.updateShaderLimiter<4)&&PMX.updateShaderLimiter>0?(PMX.app.update(),PMX.ports.update(),PMX.hardware.update(),PMX.channels.update()):(PMX.app.updateMainSourceShader(),PMX.app.update(),PMX.updateShaderLimiter=0,PMX.updateShader=!1,PMX.updateFresh=!1),PMX.updateShaderLimiter++):console.log("AP Error: Need to call PMX.init before PMX.update.")},PMX.pointPosition=[-400,-400,0],PMX.setPointPosition=function(e,t,i){PMX.pointPosition=[e,t,i],PMX.pointCloud.position&&(PMX.pointCloud.position={x:e,y:t,z:i})},PMX.appSize,PMX.setSize=function(e,t){if(PMX.appSize=[e,t],PMX.app){PMX.app.glWidth=e,PMX.app.glHeight=t,PMX.app.readPixels&&(PMX.app.pixels=new Uint8Array(4*PMX.app.glWidth*PMX.app.glHeight)),PMX.app.renderer.setSize(PMX.app.glWidth,PMX.app.glHeight);var i=PMX.pointSize;i*=e*t*1e-5,PMX.pointMaterial.uniforms.u_pointSize.value=i}},PMX.importShader=function(e,t){PMX.app.importShader(e,t)},PMX.generateShader=function(){PMX.app.updateMainSourceShader()},PMX.simpleSetup=function(e){e.mix=e.mix||1,e.channel=e.channel||1;for(var t=[],i=0;i<e.ids.length;i++)t[i]=new PMX.Clip({id:e.ids[i]});var r=[];r[0]=new PMX.Pod({clips:t});var a=new PMX.Channel({mix:e.mix,pods:r});PMX.channels.setChannel(e.channel,a),PMX.generateShader()},PMX.updateNodePoints=function(){PMX.app.updateGeometry(),PMX.app.generateCoordsMap(),PMX.app.createNodePointCloud()},PMX.get=function(e,t,i,r){return t?PMX.getUniform(e,t,i,r).value:PMX.material.uniforms[e].value},PMX.set=function(e,t,i,r,a){i?(PMX.getUniform(e,i,r,a).value=t,PMX.setObjProperty(e,t,i,r,a)):PMX.material.uniforms[e].value=t},PMX.getUniform=function(e,t,i,r){var a="_"+t;return i&&(a+="_"+i,r&&(a+="_"+r)),PMX.material.uniforms[a+"_"+e]},PMX.getObj=function(e,t,i){var r=PMX.channels.channels[e-1];return t&&(r=r.pods[t-1],i&&(r=r.clips[i-1])),r},PMX.setObj=function(e,t,i,r){i?r?PMX.channels.channels[t-1].pods[i-1].clips[r-1]=e:PMX.channels.channels[t-1].pods[i-1]=e:PMX.channels.channels[t-1]=e},PMX.getObjProperty=function(e,t,i,r){var a=PMX.getObj(t,i,r);return a[e]},PMX.setObjProperty=function(e,t,i,r,a){var n=PMX.getObj(i,r,a);n[e]=t},PMX.load=function(e){PMX.channels.channels=e,PMX.updateShader=!0,PMX.updateFresh=!0},PMX.stringify=function(){return JSON.stringify(PMX.channels.channels)},PMX.AppManager=function(e,t){this.glWidth=0,this.glHeight=0,this.sceneMain=e,this.renderer=t,this.cameraRTT,this.sceneRTT,this.rtTextureA,this.rtTextureB,this.rtToggle=!0,this.controls,this.camera,this.geoX=[],this.geoY=[],this.passIndex=[],this.fragmentShader,this.time=0,this.pixels,this.render=!0,this.readPixels=!1,this.nodeTexture=THREE.ImageUtils.loadTexture("images/nodeflare250.png"),this.coordsMap,this.altMap1,this.altMap2,this.plane=new THREE.PlaneBufferGeometry(PMX.simSize,PMX.simSize),PMX.pointGeometry=new THREE.Geometry},PMX.AppManager.prototype={init:function(){this.rtTextureA=new THREE.WebGLRenderTarget(PMX.simSize,PMX.simSize,{minFilter:THREE.NearestMipMapNearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.rtTextureB=this.rtTextureA.clone(),this.cameraRTT=new THREE.OrthographicCamera(PMX.simSize/-2,PMX.simSize/2,PMX.simSize/2,PMX.simSize/-2,-1e4,1e4),this.sceneRTT=new THREE.Scene,PMX.pointGeometry=new THREE.Geometry,PMX.updateNodePoints(),this.readPixels&&(this.pixels=new Uint8Array(4*this.glWidth*this.glHeight))},update:function(){if(this.time+=PMX.speed,this.render&&PMX.ready&&(PMX.material.uniforms._time.value=this.time,PMX.material.uniforms._random.value=Math.random(),this.rtToggle?(PMX.material.uniforms.u_prevCMap.value=this.rtTextureB,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureA,!0),PMX.pointMaterial.uniforms.u_colorMap.value=this.rtTextureA):(PMX.material.uniforms.u_prevCMap.value=this.rtTextureA,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureB,!0),PMX.pointMaterial.uniforms.u_colorMap.value=this.rtTextureB),this.rtToggle=!this.rtToggle,this.updateClips(),this.readPixels)){this.renderer.render(this.sceneRTT,this.cameraRTT);var e=this.renderer.getContext();e.readPixels(0,0,this.glWidth,this.glHeight,e.RGBA,e.UNSIGNED_BYTE,this.pixels),this.renderer.clear()}},setSize:function(e,t){this.glWidth=e,this.glHeight=t},addPlanesForTesting:function(){testPlane=new THREE.PlaneBufferGeometry(2*PMX.simSize,2*PMX.simSize);var e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureA}},vertexShader:PMX.shaders.SimpleTextureShader.vertexShader,fragmentShader:PMX.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e);t.position.x=-600,this.sceneMain.add(t),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureB}},vertexShader:PMX.shaders.SimpleTextureShader.vertexShader,fragmentShader:PMX.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e),t.position.x=-900,this.sceneMain.add(t),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.coordsMap}},vertexShader:PMX.shaders.SimpleTextureShader.vertexShader,fragmentShader:PMX.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),t=new THREE.Mesh(testPlane,e),t.position.x=-1200,this.sceneMain.add(t)},importShader:function(e,t){function i(e){return e.localeCompare("#ifdef GL_ES")>-1?!0:e.localeCompare("#endif")>-1?!0:e.localeCompare("uniform float time")>-1?!0:e.localeCompare("uniform float random")>-1?!0:e.localeCompare("uniform vec2 resolution")>-1?!0:e.localeCompare("precision highp float")>-1?!0:!1}var r=0,a=!1,n="",s=0,o=0,p={};p.constants=[],p.fragmentFunctions=[];for(var l=t.split("\n"),c=0;c<l.length;c++){var d=l[c].trim();if(d=d.replace(/ +(?= )/g,""),d.length>0){var h=d.replace(/[^{]/g,"").length,u=d.replace(/[^}]/g,"").length;r+=h,r-=u,r>0&&(a=!0),a?(n+=d+"\n",0===r&&(a=!1,n.localeCompare("void main(")>-1?p.fragmentMain=n.slice(n.indexOf("{")+1,n.lastIndexOf("}")):(p.fragmentFunctions[s]=n,s++),n="")):i(d)||(p.constants[o]=d,o++)}}PMX.shaderCount>-1&&(PMX.clips[e]?p.id=PMX.clips[e].id:(PMX.shaderCount++,p.id=PMX.shaderCount)),PMX.clips[e]=p},updateClips:function(){for(var e=0;e<PMX.channels.channels.length;e++){var t=PMX.channels.channels[e];if(t&&t.pods)for(var i=0;i<t.pods.length;i++){var r=t.pods[i];if(r&&r.clips)for(var a=0;a<r.clips.length;a++){var n=r.clips[a];if(n&&PMX.clips[n.id]){PMX.material.uniforms["_"+(e+1)+"_"+(i+1)+"_"+(a+1)+"_time"].value+=n.speed*PMX.speed;var s=PMX.clips[n.id];s&&s.update&&PMX.material&&s.update("_"+(e+1)+"_"+(i+1)+"_"+(a+1),PMX.material.uniforms)}}}}},updateGeometry:function(){this.geoX=[],this.geoY=[],this.passIndex=[],PMX.pointGeometry=new THREE.Geometry;var t=0;for(e=0;e<PMX.ports.getPorts().length;e++){var r=PMX.ports.getPort(e+1);if(r&&r.nodes)for(i=0;i<r.nodes.length;i++){var a=new THREE.Vector3;a.x=r.nodes[i].x||0,a.y=r.nodes[i].y||0,a.z=r.nodes[i].z||0,PMX.pointGeometry.vertices.push(a);var n=PMX.simSize,s=(t+1)%n;0===s&&(s=n);var o=(t+2-s)/n;this.geoX.push(s/n-.5/n),this.geoY.push(1-o/n-.5/n),this.passIndex.push(t),t++}}},generateCoordsMap:function(){for(var e=new Float32Array(4*Math.pow(PMX.simSize,2)),t=0,i=1e11,r=0,a=1e11,n=0,s=1e11,o=0,p=0,l=e.length;l>p;p+=4){var c=0,d=0,h=0;PMX.pointGeometry.vertices[t]?(c=PMX.pointGeometry.vertices[t].x,d=PMX.pointGeometry.vertices[t].y,h=PMX.pointGeometry.vertices[t].z,i=Math.min(i,c),r=Math.max(r,c),a=Math.min(a,d),n=Math.max(n,d),s=Math.min(s,h),o=Math.max(o,h),e[p+3]=1,t++):e[p+3]=0,e[p+0]=c,e[p+1]=d,e[p+2]=h}PMX.channels.setPodPos(1,new PMX.PodPosition(i,a,s,r-i,n-a,o-s)),this.coordsMap=new THREE.DataTexture(e,PMX.simSize,PMX.simSize,THREE.RGBAFormat,THREE.FloatType),this.coordsMap.minFilter=THREE.NearestFilter,this.coordsMap.magFilter=THREE.NearestFilter,this.coordsMap.needsUpdate=!0,this.coordsMap.flipY=!0,this.altMap1=new THREE.DataTexture(e,PMX.simSize,PMX.simSize,THREE.RGBAFormat,THREE.FloatType),this.altMap1.minFilter=THREE.NearestFilter,this.altMap1.magFilter=THREE.NearestFilter,this.altMap1.needsUpdate=!0,this.altMap1.flipY=!0},createNodePointCloud:function(){function e(e,t){var i={};for(var r in e)e[r]&&(i[r]=e[r]);for(var a in t)t[a]&&(i[a]=t[a]);return i}var t={a_geoX:{type:"f",value:this.geoX},a_geoY:{type:"f",value:this.geoY},a_index:{type:"f",value:this.passIndex}},i={u_colorMap:{type:"t",value:this.rtTextureA},u_texture:{type:"t",value:this.nodeTexture}};PMX.pointMaterial=new THREE.ShaderMaterial({uniforms:e(i,PMX.shaders.PointCloudShader.uniforms),attributes:e(t,PMX.shaders.PointCloudShader.attributes),vertexShader:PMX.shaders.PointCloudShader.vertexShader,fragmentShader:PMX.shaders.PointCloudShader.fragmentShader,depthTest:!1,transparent:!0});var r="PM Nodes";this.sceneMain.getObjectByName(r)&&this.sceneMain.remove(PMX.pointCloud),PMX.pointCloud=new THREE.PointCloud(PMX.pointGeometry,PMX.pointMaterial),PMX.pointCloud.sortParticles=!0,PMX.pointCloud.name=r,PMX.pointPosition&&(PMX.pointCloud.position.x=PMX.pointPosition[0],PMX.pointCloud.position.y=PMX.pointPosition[1],PMX.pointCloud.position.z=PMX.pointPosition[2]),this.sceneMain.add(PMX.pointCloud),PMX.pointGeometry.vertices.length>0&&(console.log("PM Nodes: "+PMX.pointGeometry.vertices.length),PMX.ready=!0)},updateMainSourceShader:function(){var e={_time:{type:"f",value:this.time},_random:{type:"f",value:Math.random()},u_coordsMap:{type:"t",value:this.coordsMap},u_prevCMap:{type:"t",value:this.rtTextureB},u_mapSize:{type:"f",value:PMX.simSize}},t=PMX.channels.generateSourceShader(),i="";PMX.usePodUniforms&&(e.u_pos_id={type:"i",value:0},e.u_pos_x={type:"f",value:0},e.u_pos_y={type:"f",value:0},e.u_pos_z={type:"f",value:0},e.u_pos_w={type:"f",value:0},e.u_pos_h={type:"f",value:0},e.u_pos_d={type:"f",value:0},i+="uniform int u_pos_id;\n",i+="uniform float u_pos_x;\n",i+="uniform float u_pos_y;\n",i+="uniform float u_pos_z;\n",i+="uniform float u_pos_w;\n",i+="uniform float u_pos_h;\n",i+="uniform float u_pos_d;\n");for(var r in t.uniforms){var a=PMX.getVariableTypeFromShorthand(t.uniforms[r].type);i+="uniform "+a+" "+r+";\n",e[r]=t.uniforms[r]}if(this.altMap1&&(i+="uniform sampler2D u_altMap1; vec4 ap_alt1; \n",e.u_altMap1={type:"t",value:this.altMap1}),this.altMap2&&(i+="uniform sampler2D u_altMap2; vec4 ap_alt2; \n",e.u_altMap2={type:"t",value:this.altMap2}),!PMX.updateFresh&&PMX.material)for(r in e)PMX.material.uniforms[r]&&(e[r].value=PMX.material.uniforms[r].value);this.fragmentShader=PMX.MainShader.fragmentShader,this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERS",t.fragmentMain),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERFUNCTIONS",t.fragmentFunctions),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERUTILS",PMX.shaders.ShaderUtils+i),this.fragmentShader=this.minFragmentShader(this.fragmentShader),PMX.material=new THREE.ShaderMaterial({uniforms:e,vertexShader:PMX.shaders.SimpleTextureShader.vertexShader,fragmentShader:this.fragmentShader}),PMX.material.uniforms.u_coordsMap.value=this.coordsMap,PMX.material.uniforms.u_prevCMap.value=this.rtTextureB,this.altMap1&&(PMX.material.uniforms.u_altMap1.value=this.altMap1),this.altMap2&&(PMX.material.uniforms.u_altMap2.value=this.altMap2);var n="SourceQuad",s=this.sceneRTT.getObjectByName(n);s&&this.sceneRTT.remove(s);var o=new THREE.Mesh(this.plane,PMX.material);o.position.z=-100,o.name=n,this.sceneRTT.add(o)},minFragmentShader:function(e){return e=e.replace(/ap_alt/g,"_0"),e=e.replace(/ap_/g,"_"),e=e.replace(/_xyz/g,"_1"),e=e.replace(/hsv2rgb/g,"_2"),e=e.replace(/rgb2hsv/g,"_3"),e=e.replace(/offsetPos/g,"_4"),e=e.replace(/_rgb/g,"_5"),e=e.replace(/_hsv/g,"_6"),e=e.replace(/resolution/g,"_7"),e=e.replace(/superFunction/g,"_8"),e=e.replace(/checkBounds/g,"_9"),e=e.replace(/returnColor/g,"_91"),e=e.replace(/getPodSize/g,"_92"),e=e.replace(/getPodPos/g,"_93"),e=e.replace(/_lastRgb/g,"_94"),e=e.replace(/getPodScale/g,"_95"),e=e.replace(/getPodOffset/g,"_96")}},PMX.ChannelManager=function(){this.channels=[],this.podpositions=[]},PMX.ChannelManager.prototype={init:function(){},update:function(){},generateSourceShader:function(){function e(e,t){var i=e.match(new RegExp("^(?:\\w+\\W+){"+--t+"}(\\w+)"));return i&&i[1]}for(var t={},i={},r={},a={},n=this.generateSizingFunctions(),s="",o="",p="",l={},c="",d=0;d<this.channels.length;d++){var h=this.channels[d];h.address="_"+(d+1);var P=!1;if(h.type===PMX.CHANNEL_TYPE_FX&&(P=!0),o+="if(_channel_mix>0.){ \n",t[h.address+"_mix"]={type:"f",value:h.mix},h&&h.pods)for(var M=0;M<h.pods.length;M++){var f=h.pods[M];if(f){f.address=h.address+"_"+(M+1),t[f.address+"_mix"]={type:"f",value:f.mix},t[f.address+"_blend"]={type:"f",value:f.blend};var _=!1;if(f.clips&&f.clips.length)for(var g=0;g<f.positionIds.length;g++){o+="//-- \n";var m=this.getPodPos(f.positionIds[g]);if(l!==m){l=m;var X="vec2("+m.w+", "+m.h+");";PMX.usePodUniforms&&(X="vec2(getPodSize("+f.positionIds[g]+").x, getPodSize("+f.positionIds[g]+").y);"),c!==X&&(c=X,o+="resolution = "+X+" \n"),o+="ap_xyz = offsetPos(ap_xyz2, "+f.positionIds[g]+", ap_xyz.w);\n"}for(o+="if(_pod_mix > 0. && checkBounds(ap_xyz2, "+f.positionIds[g]+") > 0.){ \n",_=!0,u=0;u<f.clips.length;u++){var v=f.clips[u];if(v){var x=PMX.clips[v.id];if(x){if(!r[f.clips[u].id]){r[f.clips[u].id]=!0;for(var S in x.constants)i[S]||(i[S]=1,n+=x.constants[S]+"\n");if(n+="\n",x.fragmentFunctions)for(var y=0;y<x.fragmentFunctions.length;y++){var T=x.fragmentFunctions[y].trim();T=e(T,1)+e(T,2)+e(T,3)+e(T,4)+e(T,5),a[T]||(a[T]=!0,n+=x.fragmentFunctions[y]+"\n")}s+="else if(id == "+x.id+"){\n",s+=x.fragmentMain.replace("gl_FragColor","returnColor"),s+="\n",s=s.replace(/gl_FragCoord/g,"ap_xyz"),s+="\n}\n"}if(v.address=f.address+"_"+(u+1),v.id.length>0&&x){for(var E in x.params)PMX.setObjProperty(E,x.params[E].value,d+1,M+1,u+1),t[v.address+"_"+E]={type:"f",value:x.params[E].value};for(var b in x.properties)t[v.address+"_"+b]=x.properties[b];x.init&&x.init(v.address,t),t[v.address+"_mix"]={type:"f",value:v.mix},t[v.address+"_blend"]={type:"f",value:v.blend},t[v.address+"_time"]={type:"f",value:PMX.app.time};for(var z=["0.","0.","0.","0.","0.","0.","0.","0.","0."],C=0;C<z.length;C++)x.params&&x.params["p"+(C+1)]&&(z[C]=v.address+"_p"+(C+1));p="",v.posMap==PMX.MAP_ALT1&&PMX.app.altMap1&&(p+="ap_xyz = offsetPos(ap_alt1, "+f.positionIds[g]+", ap_xyz.w);\n"),p+="ap_rgb2 = superFunction(_clip_mix, "+x.id+", _fxIn, _clip_time, "+z[0]+","+z[1]+","+z[2]+","+z[3]+","+z[4]+","+z[5]+","+z[6]+","+z[7]+","+z[8]+");",p=p.replace(/gl_FragCoord/g,"ap_xyz");var N=PMX.clips[v.id].fx;0===u?(p+="ap_rgb = ap_rgb2; \n",N||P?p+="ap_rgb = mix(ap_p, ap_rgb2, _clip_mix); \n":(_=P,p+="ap_rgb = ap_rgb * (_clip_mix); \n")):N||P?p+="ap_rgb = mix(ap_rgb, ap_rgb2, _clip_mix); \n":(p+="ap_rgb2 = ap_rgb2 * (_clip_mix); \n",p+="ap_rgb = blend(ap_rgb2, ap_rgb, _clip_blend); \n",_=P),p=p.replace(/_clip_/g,v.address+"_"),p=p.replace(/__/g,v.address+"_"),p=0===u?p.replace(/_fxIn/g,"ap_p"):p.replace(/_fxIn/g,"ap_rgb"),o+=p}}else console.log("AP Error - shader not found: "+v.id)}}_?o+="ap_p = mix(ap_p, ap_rgb, _pod_mix); \n":0===M?o+="ap_p = ap_rgb * (_pod_mix); \n":(o+="ap_rgb = ap_rgb * (_pod_mix); \n",o+="ap_p = blend(ap_p, ap_rgb, _pod_blend); \n"),o+="}"}o=o.replace(/_pod_/g,f.address+"_")+"\n"}}0===d?o+="ap_c = ap_p = ap_p * (_channel_mix); \n":P?o+="ap_c = mix(ap_c, ap_p, _channel_mix); \n":(o+="ap_p = ap_p * (_channel_mix); \n",o+="ap_c = blend(ap_c, ap_p, 1.); \n"),o+="}",o=o.replace(/_channel_/g,h.address+"_")+"\n"}return s=s.slice(5,s.length),s="vec4 returnColor = vec4(0.,0.,0.,0.); if(_mi == 0.){return vec3(0.,0.,0.);} \n"+s,s+="return max(min(vec3(returnColor.x, returnColor.y, returnColor.z), vec3(1.0)), vec3(0.0)); \n",s="vec3 superFunction(float _mi, int id, vec3 _fxIn, float time, float _p1, float _p2, float _p3, float _p4, float _p5, float _p6, float _p7, float _p8, float _p9) { \n"+s+"}\n",n+=s,PMX.app.altMap1&&(o="ap_alt1 = texture2D( u_altMap1, v_vUv);"+o),PMX.app.altMap2&&(o="ap_alt2 = texture2D( u_altMap2, v_vUv);"+o),PMX.dataSetLength&&PMX.dataSetLength>0&&(n="uniform float data[ "+PMX.dataSetLength+" ]; \n"+n),{uniforms:t,fragmentFunctions:n,fragmentMain:o+"\n"}},generateSizingFunctions:function(){var e="";PMX.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_x, u_pos_y, u_pos_z);\n",e+="}");for(var t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].x+","+this.podpositions[t].y+","+this.podpositions[t].z+");\n",e+="}\n";PMX.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodPos(int d) { \n"+e+"}\n";var i=e;for(e="",PMX.usePodUniforms&&(e+="if(d == u_pos_id){\n",e+="p = vec3(u_pos_w, u_pos_h, u_pos_d);\n",e+="}"),t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].w+","+this.podpositions[t].h+","+this.podpositions[t].d+");\n",e+="}\n";if(PMX.usePodUniforms||(e=e.slice(5,e.length)),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodSize(int d) { \n"+e+"}\n",i+=e,PMX.useTransforms){for(e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec3("+this.podpositions[t].xt+","+this.podpositions[t].yt+","+this.podpositions[t].zt+");\n",e+="}\n";for(e=e.slice(5,e.length),e="vec3 p = vec3(0.,0.,0.); \n"+e,e+="return p; \n",e="vec3 getPodOffset(int d) { \n"+e+"}\n",i+=e,e="",t=0;t<this.podpositions.length;t++)e+="else if(d == "+(t+1)+"){\n",e+="p = vec4("+this.podpositions[t].xs+","+this.podpositions[t].ys+","+this.podpositions[t].zs+","+this.podpositions[t].flipmode+");\n",e+="}\n";e=e.slice(5,e.length),e="vec4 p = vec4(0.,0.,0.,0.); \n"+e,e+="return p; \n",e="vec4 getPodScale(int d) { \n"+e+"}\n",i+=e}return i+=["float checkBounds(vec4 b, int p)","{","vec3 s = getPodPos(p);","if(b.x >= s.x && b.y >= s.y && b.z >= s.z){ ","vec3 e = getPodSize(p);","if(b.x <= (e.x + s.x) && b.y <= (e.y + s.y) && b.z <= (e.z + s.z)) {","	return 1.;","}}","	return 0.;","}"].join("\n"),i+="vec4 offsetPos(vec4 b, int p, float w){\n",i+="vec3 c = getPodPos(p);\n",i+="float x = b.x - c.x;\n",i+="float y = b.y - c.y;\n",i+="float z = b.z - c.z;\n",i+="float t = x;\n",PMX.useTransforms&&(i+="vec4 s = getPodScale(p);\n",i+="if(s.w == 1.){",i+="x=y;y=t;\n",i+="}else if(s.w == 2.){",i+="x=z;z=t;\n",i+="}else if(s.w == 3.){",i+="t=y;y=z;z=t;\n",i+="}\n",i+="vec3 d = getPodOffset(p);\n",i+="vec3 e = getPodSize(p);\n",i+="x += (e.x * 8. * (d.x - .5));\n",i+="y += (e.y * 8. * (d.y - .5));\n",i+="z += (e.z * 8. * (d.z - .5));\n",i+="x += (b.x - (e.x * .5 + c.x)) * (1.-(s.x * 2.))*8.;\n",i+="y += (b.y - (e.y * .5 + c.y)) * (1.-(s.y * 2.))*8.;\n",i+="z += (b.z - (e.z * .5 + c.z)) * (1.-(s.z * 2.))*8.;\n"),i+="return vec4(x, y, z, w);\n",i+="}\n"},setChannel:function(e,t){this.channels[e-1]=t},getChannel:function(e){return this.channels[e-1]},getChannels:function(){return this.channels},clearChannel:function(e){delete this.channels[e-1]},clearAllChannels:function(){this.channels=[]},clearAllPodsInChannel:function(e){delete this.channels[e-1].pods},setPodPos:function(e,t){this.podpositions[e-1]=t},getPodPos:function(e){return this.podpositions[e-1]?this.podpositions[e-1]:this.podpositions[0]},clearPodPos:function(e){delete this.podpositions[e-1]},clearAllPodPos:function(){this.podpositions=[]},setClip:function(e,t,i,r){return this.channels[e-1]?void(this.channels[e-1].pods[t-1]?this.channels[e-1].pods[t-1].clips[i-1]=r:this.channels[e-1].pods[t-1]=new Pod(1,1,PMX.BLEND.Add,[r])):!1},clearClip:function(e,t,i){delete this.channels[e-1].pods[t-1].clips[i-1]},clearAllClipsInPod:function(e,t){delete this.channels[e-1].pods[t-1].clips}},PMX.HardwareManager=function(){},PMX.HardwareManager.prototype={init:function(){},update:function(){},importNodes:function(e,t,i,r,a,n){t=t||0,i=i||0,r=r||0,a=a||0,e.scale=e.scale||1;var s=n||e.scale;for(var o in e.hardwareunit){var p=e.hardwareunit[o];for(var l in p.ports){var c=p.ports[l];for(var d in c.nodes){var h=c.nodes[d];h.x=h.x||0,h.y=h.y||0,h.z=h.z||0,h.x*=s,h.y*=s,h.z*=s,h.x+=i,h.y+=r,h.z+=a}PMX.ports.setNodes(c.portid+t,c.nodes)}}},addTestGrid:function(t,r,a){var n=[];for(e=0;e<24;e++)for(i=0;i<14;i++){var s={};s.x=30*e+r,s.y=30*i+a,s.z=0,n.push(s)}PMX.ports.setNodes(t,n)},addTestPortsGrid:function(t,r,a){var n=830,s=1100,o=0,p=0;for(u=0;u<15;u++){var l=[];for(e=0;e<18;e++)for(i=0;i<24;i++){var c={};c.x=.26*(40*e+o-650+r),c.y=.26*(40*i+p+a),c.z=300*Math.random()-150,l.push(c)}var d=new PMX.Port("port name "+d,PMX.PORT_TYPE_KINET_1,null,null,l);PMX.ports.setPort(u+t,d),o+=n,(u+2)%5==1&&(o=0,p+=s)}},addTestPortsGrid2:function(t,r,a){var n=[];for(e=0;e<70;e++)for(i=0;i<38;i++){var s={};s.x=20*e-340+r,s.y=20*i+30+a,n.push(s)}var o=new PMX.Port("port name "+o,PMX.PORT_TYPE_KINET_1,null,null,n);PMX.ports.setPort(t,o)},addTestPortsGrid3:function(t,r,a){var n=[],s={};for(e=0;e<70;e++)for(i=0;i<38;i++)s={},s.x=20*e-340+r,s.y=20*i+30+a-1,n.push(s);var o=new PMX.Port("port name "+o,PMX.PORT_TYPE_KINET_1,null,null,n);for(PMX.ports.setPort(t,o),n=[],e=0;e<70;e++)for(i=0;i<38;i++)(i+2)%2==1&&(s={},s.x=20*e-340+r,s.y=20*i+30+a,s.z=110,n.push(s));for(o=new PMX.Port("port name "+o,PMX.PORT_TYPE_KINET_1,null,null,n),PMX.ports.setPort(t+1,o),n=[],e=0;e<70;e++)for(i=0;i<38;i++)(i-1)%3==1&&(e-1)%2==1&&(s={},s.x=20*e-340+r-1,s.y=20*i+30+a-1,s.z=210,n.push(s));o=new PMX.Port("port name "+o,PMX.PORT_TYPE_KINET_1,null,null,n),PMX.ports.setPort(t+2,o)},addSimpleNodeGrid:function(t,r,a,n,s,o,p){p||(p=PMX.ports.ports.length+1);var l=1e11,c=0,d=1e11,h=0,u=[];for(e=0;e<n;e++)for(i=0;i<s;i++){var P={};P.x=e*o+t,P.y=i*o+r,P.z=a,u.push(P),l=Math.min(l,P.x),c=Math.max(c,P.x),d=Math.min(d,P.y),h=Math.max(h,P.y)}var M=new PMX.Port("port name "+p,PMX.PORT_TYPE_KINET_1,null,null,u);PMX.ports.setPort(p,M),p>1&&PMX.channels.setPodPos(p,new PMX.PodPosition(l,d,a,c-l,h-d,a+1))}},PMX.PortManager=function(){this.ports=[]},PMX.PortManager.prototype={init:function(){},update:function(){},getNodes:function(e){return this.ports[e-1].nodes},getNodeCount:function(e){return this.ports[e-1].nodes.length},setNodes:function(e,t){this.ports[e-1]||(this.ports[e-1]={}),this.ports[e-1].nodes=t},setNodesOffset:function(e,t,i,r,a){this.ports[e-1]||(this.ports[e-1]={});for(var n=0;n<t.length;n++)t[n].x+=i,t[n].y+=r,t[n].z+=a;this.ports[e-1].nodes=t},setNodesFlat:function(e,t,i){this.ports[e-1]||(this.ports[e-1]={});for(var r=0;r<t.length;r++)t[r].z=i;this.ports[e-1].nodes=t},clearNodes:function(e){delete this.ports[e-1].nodes},setPort:function(e,t){this.ports[e-1]=t},getPort:function(e){return this.ports[e-1]},getPorts:function(){return this.ports},addPortDetails:function(e,t){if(!this.ports[e-1])return void console.log("Error: Cannot add details to unexisting Port "+e);var i=this.ports[e-1].nodes,r={};for(var a in this.ports[e-1])this.ports[e-1][a]&&(r[a]=this.ports[e-1][a]);for(var n in t)t[n]&&(r[n]=t[n]);this.ports[e-1]=r,this.ports[e-1].nodes=i},clearPort:function(e){delete this.ports[e-1]},clearAllPorts:function(){delete this.ports,this.ports=[]}},PMX.Channel=function(e){this.name=e.name,this.type=e.type||PMX.CHANNEL_TYPE_ADD,this.mix=e.mix||0,this.blend=e.blend||PMX.BLEND.Add,this.pods=e.pods||[]},PMX.Clip=function(e){this.id=e.id,this.mix=e.mix||1,this.blend=e.blend||PMX.BLEND.Add,this.posMap=e.posMap||PMX.MAP_NORMAL,this.speed=e.speed||1,this.p1=e.p1||0,this.p2=e.p2||0,this.p3=e.p3||0,this.p4=e.p4||0,this.p5=e.p5||0,this.p6=e.p6||0,this.p7=e.p7||0,this.p8=e.p8||0,this.p9=e.p9||0},PMX.Clip.prototype={setParams:function(e,t,i,r,a,n,s,o,p){this.p1=e,this.p2=t,this.p3=i,this.p4=r,this.p5=a,this.p6=n,this.p7=s,this.p8=o,this.p9=p}},PMX.Pod=function(e){this.positionIds=e.positionIds||[1],this.mix=e.mix||1,this.blend=e.blend||PMX.BLEND.Add,this.clips=e.clips||[]},PMX.PodPosition=function(e,t,i,r,a,n,s,o,p,l,c,d,h){this.x=e||0,this.y=t||0,this.z=i||0,this.w=r||0,this.h=a||0,this.d=n||0,this.xt=s||.5,this.yt=o||.5,this.zt=p||.5,this.xs=l||.5,this.ys=c||.5,this.zs=d||.5,this.flipmode=h||0},PMX.Port=function(e,t,i,r,a){this.name=e,this.type=t,this.address=i||"",this.nodes=a||[],this.hardwarePort=r||1},PMX.MainShader={fragmentShader:["#INCLUDESHADERUTILS","precision mediump float;","float ap_index;","vec4 ap_xyz;","vec4 ap_xyz2;","vec3 ap_lastRgb;","vec3 ap_rgb = vec3(0.);","vec3 ap_hsv;","vec3 ap_rgb2;","vec4 ap_rgbV4;","vec3 ap_c = vec3(0.);","vec3 ap_p = vec3(0.);","vec2 resolution;","float random;","varying vec2 v_vUv;","uniform float _time;","uniform float _random;","uniform float u_mapSize;","uniform sampler2D u_coordsMap;","uniform sampler2D u_prevCMap;","#define picu  31.006276680299820175476315067101 //pi cubed, pi^3","#define pisq  9.8696044010893586188344909998762 //pi squared, pi^2","#define twpi  6.283185307179586476925286766559  //two pi, 2*pi ","#define pi    3.1415926535897932384626433832795 //pi","#define prpi  1.4396194958475906883364908049738 //pi root of pi","#define trpi  1.0471975511965977461542144610932 //one third of pi, pi/3","#define lgpi  0.4971498726941338543512682882909 //log(pi)       ","#define rcpi  0.31830988618379067153776752674503// reciprocal of pi  , 1/pi  ","#INCLUDESHADERFUNCTIONS","void main() {","random = rand(vec2(gl_FragCoord[0] * (gl_FragCoord[2] + 1.), gl_FragCoord[1] * _random) * (_time * 0.0001));","ap_rgb = vec3(0.0);","ap_xyz2 = ap_xyz = texture2D( u_coordsMap, v_vUv);","if(ap_xyz[3] == 0.0){ discard; }","ap_index = ((1.0 - v_vUv.y) * u_mapSize * u_mapSize + v_vUv.x * u_mapSize);","ap_lastRgb = vec3(texture2D( u_prevCMap, v_vUv));","#INCLUDESHADERS","gl_FragColor = vec4(ap_c, 1.0);","}"].join("\n")},PMX.shaders.PointCloudShader={uniforms:{u_pointSize:{type:"f",value:PMX.pointSize}},attributes:{},vertexShader:["uniform float u_pointSize;","attribute float a_geoX;","attribute float a_geoY;","attribute float a_index;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","v_geoX = a_geoX;","v_geoY = a_geoY;","v_index = a_index;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_PointSize = u_pointSize * ( 300.0 / length( mvPosition.xyz ) );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform sampler2D u_texture;","uniform sampler2D u_colorMap;","varying float v_geoX;","varying float v_geoY;","varying float v_index;","void main() {","gl_FragColor = texture2D( u_colorMap, vec2( v_geoX, v_geoY )) * texture2D( u_texture, gl_PointCoord);","}"].join("\n")},PMX.shaders.ShaderUtils=["vec3 rgb2hsv(vec3 c){","vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);"," vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","float d = q.x - min(q.w, q.y);","float e = 1.0e-10;","return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 hsv2rgb(vec3 c) {","	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","	vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","vec3 blend(vec3 c1, vec3 c2, float type)","{","if(type == 0.0){ return c1; }else						","if(type == 1.0){ return c1 + c2; }else					","if(type == 2.0){ return c1 - c2; }else					","if(type == 3.0){ return min(c1, c2); }else				","if(type == 4.0){ return max(c1, c2); }else				","if(type == 5.0){ return abs(c2 - c1); }else				","if(type == 6.0){ return c1 + c2 - 2.0 * c1 * c2; }else	","if(type == 7.0){ return c1 * c2; }else					","if(type == 8.0){ return (c1 + c2) - (c1 * c2); }else	","if(type == 9.0){ return vec3((c2.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c2.r) * (1.0 - c1.r)),(c2.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c2.g) * (1.0 - c1.g)),(c2.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c2.b) * (1.0 - c1.b))); }else","if(type == 10.0){ return vec3((c1.r <= 0.5) ? (2.0 * c1.r * c2.r) : (1.0 - 2.0 * (1.0 - c1.r) * (1.0 - c2.r)),(c1.g <= 0.5) ? (2.0 * c1.g * c2.g) : (1.0 - 2.0 * (1.0 - c1.g) * (1.0 - c2.g)),(c1.b <= 0.5) ? (2.0 * c1.b * c2.b) : (1.0 - 2.0 * (1.0 - c1.b) * (1.0 - c2.b))); }else","if(type == 11.0){ return vec3((c1.r <= 0.5) ? (c2.r - (1.0 - 2.0 * c1.r) * c2.r * (1.0 - c2.r)) : (((c1.r > 0.5) && (c2.r <= 0.25)) ? (c2.r + (2.0 * c1.r - 1.0) * (4.0 * c2.r * (4.0 * c2.r + 1.0) * (c2.r - 1.0) + 7.0 * c2.r)) : (c2.r + (2.0 * c1.r - 1.0) * (sqrt(c2.r) - c2.r))),(c1.g <= 0.5) ? (c2.g - (1.0 - 2.0 * c1.g) * c2.g * (1.0 - c2.g)) : (((c1.g > 0.5) && (c2.g <= 0.25)) ? (c2.g + (2.0 * c1.g - 1.0) * (4.0 * c2.g * (4.0 * c2.g + 1.0) * (c2.g - 1.0) + 7.0 * c2.g)) : (c2.g + (2.0 * c1.g - 1.0) * (sqrt(c2.g) - c2.g))),(c1.b <= 0.5) ? (c2.b - (1.0 - 2.0 * c1.b) * c2.b * (1.0 - c2.b)) : (((c1.b > 0.5) && (c2.b <= 0.25)) ? (c2.b + (2.0 * c1.b - 1.0) * (4.0 * c2.b * (4.0 * c2.b + 1.0) * (c2.b - 1.0) + 7.0 * c2.b)) : (c2.b + (2.0 * c1.b - 1.0) * (sqrt(c2.b) - c2.b)))); }else","if(type == 12.0){ return vec3((c1.r == 1.0) ? 1.0 : min(1.0, c2.r / (1.0 - c1.r)),(c1.g == 1.0) ? 1.0 : min(1.0, c2.g / (1.0 - c1.g)),(c1.b == 1.0) ? 1.0 : min(1.0, c2.b / (1.0 - c1.b))); }else","if(type == 13.0){ return vec3((c1.r == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.r) / c1.r)),(c1.g == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.g) / c1.g)), (c1.b == 0.0) ? 0.0 : (1.0 - ((1.0 - c2.b) / c1.b))); }else","if(type == 14.0){ return (c1 + c2) - 1.0; }else","if(type == 15.0){ return 2.0 * c1 + c2 - 1.0; }else","if(type == 16.0){ return vec3((c1.r <= 0.5) ? (1.0 - (1.0 - c2.r) / (2.0 * c1.r)) : (c2.r / (2.0 * (1.0 - c1.r))),(c1.g <= 0.5) ? (1.0 - (1.0 - c2.g) / (2.0 * c1.g)) : (c2.g / (2.0 * (1.0 - c1.g))),(c1.b <= 0.5) ? (1.0 - (1.0 - c2.b) / (2.0 * c1.b)) : (c2.b / (2.0 * (1.0 - c1.b)))); }else","if(type == 17.0){ return vec3((c1.r > 0.5) ? max(c2.r, 2.0 * (c1.r - 0.5)) : min(c2.r, 2.0 * c1.r), (c1.r > 0.5) ? max(c2.g, 2.0 * (c1.g - 0.5)) : min(c2.g, 2.0 * c1.g),(c1.b > 0.5) ? max(c2.b, 2.0 * (c1.b - 0.5)) : min(c2.b, 2.0 * c1.b)); }else","{ return c1 + c2; }								","}","float rand(vec2 co)","{","  highp float a = 12.9898;","  highp float b = 78.233;","  highp float c = 43758.5453;","  highp float dt= dot(co.xy ,vec2(a,b));","  highp float sn= mod(dt,3.14);","  return fract(sin(sn) * c);","}"].join("\n"),PMX.shaders.SimpleTextureShader={uniforms:{u_texture:{type:"t",value:null}},vertexShader:["varying vec2 v_vUv;","void main() {","v_vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 v_vUv;","uniform sampler2D u_texture;","void main() {","	gl_FragColor = texture2D( u_texture, v_vUv );","}"].join("\n")};
