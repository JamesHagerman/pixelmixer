function getVariableTypeFromShorthand(e){var a;switch(e){case"i":a="int";break;case"f":a="float";break;case"t":a="sampler2D";break;case"v2":a="vec2";break;case"v3":a="vec3";break;case"v4":a="vec4"}return a}function clone(e){if(null===e||"object"!=typeof e)return e;var a=e.constructor();for(var t in e)e.hasOwnProperty(t)&&(a[t]=e[t]);return a}function merge(e,a){var t={};for(var i in e)e[i]&&(t[i]=e[i]);for(var r in a)a[r]&&(t[r]=a[r]);return t}function lowestPowerOfTwo(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.log(2)))}var ap={REVISION:"1"};ap.shaders={},ap.clips={},ap.register={},ap.imported={},ap.BLEND={},ap.BLEND.OFF=0,ap.BLEND.Add=1,ap.BLEND.Subtract=2,ap.BLEND.Darkest=3,ap.BLEND.Lightest=4,ap.BLEND.Difference=5,ap.BLEND.Exclusion=6,ap.BLEND.Multiply=7,ap.BLEND.Screen=8,ap.BLEND.Overlay=9,ap.BLEND.HardLight=10,ap.BLEND.SoftLight=11,ap.BLEND.Dodge=12,ap.BLEND.Burn=13,ap.BLEND.LinearBurn=14,ap.BLEND.LinearLight=15,ap.BLEND.VividLight=16,ap.BLEND.PinLight=17,ap.BLEND.Fx=1,ap.BLENDS=["Add","Substract","Darkest","Lightest","Difference","Exclusion","Multiply","Screen","Overlay","HardLight","SoftLight","Dodge","Burn","LinearBurn","LinearLight","VividLight","PinLight"],ap.PORT_TYPE_OFF=0,ap.PORT_TYPE_KINET_1=1,ap.PORT_TYPE_KINET_2=2,ap.PORT_TYPE_KINET_3=3,ap.PORT_TYPE_KINET_4=4,ap.PORT_TYPE_DMX_1=5,ap.PORT_TYPE_DMX_2=6,ap.PORT_TYPE_DMX_3=7,ap.PORT_TYPE_LASER_1=8,ap.CHANNEL_TYPE_OFF=0,ap.CHANNEL_TYPE_BLEND=1,ap.CHANNEL_TYPE_FX=2,ap.CHANNEL_TYPE_SCENE=3,ap.HARDWAREGROUP_OFF=0,ap.HARDWAREGROUP_SOLO=1,ap.HARDWAREGROUP_EXCLUDE=2,ap.demoPresets=[0,2,3,8,10,12,13,11,9,15,6,14,7],ap.demoPresetNames=["OFF","SolidColor","TestFrame","ColorSineBar","ColorSwirls","LineCosSin","SimpleSwirl","SinSpiral","SineParticles","DiSinSwirl","Water","HexifyRadial","SinCosTan"],ap.demoHardware=["ApHardwareTest","Grid+zLayer","RanZGrid"];var AppManager=function(e){this.glWidth=0,this.glHeight=0,this.stats=new Stats,this.stats.domElement.style.position="absolute",this.stats.domElement.style.top="0px",this.container=e,this.renderer,this.cameraRTT,this.sceneRTT,this.rtTextureA,this.rtTextureB,this.rtToggle=!0,this.nodeShaderMaterial,this.scene,this.controls,this.camera,this.material,this.geoX=[],this.geoY=[],this.passIndex=[],this.geometry=new THREE.Geometry,this.pointCloud,this.fragmentShader,this.time=0,this.speed=.06,this.simSize=128,this.pixels,this.readPixels=!1,this.nodeTexture=THREE.ImageUtils.loadTexture("images/nodeflare250.png"),this.coordsMap,this.plane=new THREE.PlaneBufferGeometry(this.simSize,this.simSize)};AppManager.prototype={init:function(){this.rtTextureA=new THREE.WebGLRenderTarget(this.simSize,this.simSize,{minFilter:THREE.NearestMipMapNearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.rtTextureB=this.rtTextureA.clone(),this.cameraRTT=new THREE.OrthographicCamera(this.simSize/-2,this.simSize/2,this.simSize/2,this.simSize/-2,-1e4,1e4),this.sceneRTT=new THREE.Scene,this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(this.glWidth,this.glHeight),this.renderer.autoClear=!1,this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.stats.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(30,this.glWidth/this.glHeight,1,1e4),this.camera.position.z=1500,this.controls=new THREE.TrackballControls(this.camera,this.renderer.domElement),this.geometry=new THREE.Geometry,this.readPixels&&(this.pixels=new Uint8Array(4*this.glWidth*this.glHeight))},update:function(){if(this.time+=this.speed,this.stats.update(),this.controls.update(),this.material&&this.nodeShaderMaterial){if(this.material.uniforms.u_time.value=this.time,this.material.uniforms.u_random.value=Math.random(),this.rtToggle?(this.material.uniforms.u_prevCMap.value=this.rtTextureB,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureA,!0),this.nodeShaderMaterial.uniforms.u_colorMap.value=this.rtTextureA):(this.material.uniforms.u_prevCMap.value=this.rtTextureA,this.renderer.render(this.sceneRTT,this.cameraRTT,this.rtTextureB,!0),this.nodeShaderMaterial.uniforms.u_colorMap.value=this.rtTextureB),this.rtToggle=!this.rtToggle,this.readPixels){this.renderer.render(this.sceneRTT,this.cameraRTT);var e=this.renderer.getContext();e.readPixels(0,0,this.glWidth,this.glHeight,e.RGBA,e.UNSIGNED_BYTE,this.pixels),this.renderer.clear()}this.renderer.render(this.scene,this.camera)}},setSize:function(e,a){this.glWidth=e,this.glHeight=a},addPlanesForTesting:function(){testPlane=new THREE.PlaneBufferGeometry(2*this.simSize,2*this.simSize);var e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureA}},vertexShader:ap.shaders.SimpleTextureShader.vertexShader,fragmentShader:ap.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),a=new THREE.Mesh(testPlane,e);a.position.x=-600,this.scene.add(a),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.rtTextureB}},vertexShader:ap.shaders.SimpleTextureShader.vertexShader,fragmentShader:ap.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),a=new THREE.Mesh(testPlane,e),a.position.x=-900,this.scene.add(a),e=new THREE.ShaderMaterial({uniforms:{u_texture:{type:"t",value:this.coordsMap}},vertexShader:ap.shaders.SimpleTextureShader.vertexShader,fragmentShader:ap.shaders.SimpleTextureShader.fragmentShader,depthWrite:!1}),a=new THREE.Mesh(testPlane,e),a.position.x=-1200,this.scene.add(a)},updateNodePoints:function(){this.geoX=[],this.geoY=[],this.passIndex=[],this.geometry=new THREE.Geometry;var a=0;for(e=0;e<ap.ports.getPorts().length;e++){var t=ap.ports.getPort(e+1);if(t&&t.nodes)for(i=0;i<t.nodes.length;i++){var r=new THREE.Vector3;r.x=t.nodes[i].x||0,r.y=t.nodes[i].y||0,r.z=t.nodes[i].z||0,this.geometry.vertices.push(r);var s=this.simSize,n=(a+1)%s;0===n&&(n=s);var o=(a+2-n)/s;this.geoX.push(n/s-.5/s),this.geoY.push(1-o/s-.5/s),this.passIndex.push(a),a++}}this.generateCoordsMap(),this.createNodePointCloud()},generateCoordsMap:function(){for(var e=new Float32Array(4*Math.pow(this.simSize,2)),a=0,t=1e11,i=0,r=1e11,s=0,n=0,o=e.length;o>n;n+=4){var p=0,d=0,h=0;this.geometry.vertices[a]?(p=this.geometry.vertices[a].x,d=this.geometry.vertices[a].y,h=this.geometry.vertices[a].z,t=Math.min(t,p),i=Math.max(i,p),r=Math.min(r,d),s=Math.max(s,d),e[n+3]=1,a++):e[n+3]=0,e[n+0]=p,e[n+1]=d,e[n+2]=h}ap.channels.setPodPos(1,new PodPosition(t,r,0,i-t,s-r,1)),this.coordsMap=new THREE.DataTexture(e,this.simSize,this.simSize,THREE.RGBAFormat,THREE.FloatType),this.coordsMap.minFilter=THREE.NearestFilter,this.coordsMap.magFilter=THREE.NearestFilter,this.coordsMap.needsUpdate=!0,this.coordsMap.flipY=!0},createNodePointCloud:function(){var e={a_geoX:{type:"f",value:this.geoX},a_geoY:{type:"f",value:this.geoY},a_index:{type:"f",value:this.passIndex}},a={u_colorMap:{type:"t",value:this.rtTextureA},u_pointSize:{type:"f",value:ap.shaders.NodeShader.uniforms.u_pointSize.value},u_texture:{type:"t",value:this.nodeTexture}};this.nodeShaderMaterial=new THREE.ShaderMaterial({uniforms:a,attributes:e,vertexShader:ap.shaders.NodeShader.vertexShader,fragmentShader:ap.shaders.NodeShader.fragmentShader,depthTest:!1,transparent:!0});var t="AP Nodes";this.scene.getObjectByName(t)&&this.scene.remove(this.pointCloud),this.pointCloud=new THREE.PointCloud(this.geometry,this.nodeShaderMaterial),this.pointCloud.sortParticles=!0,this.pointCloud.name=t,this.pointCloud.position.x=-400,this.pointCloud.position.y=-400,this.scene.add(this.pointCloud),console.log("AP Nodes: "+this.geometry.vertices.length)},updateMainSourceShader:function(){var e={u_time:{type:"f",value:this.time},u_random:{type:"f",value:Math.random()},u_coordsMap:{type:"t",value:this.coordsMap},u_prevCMap:{type:"t",value:this.rtTextureB},u_mapSize:{type:"f",value:this.simSize}},a=ap.channels.generateSourceShader(),t="";for(var i in a.uniforms){var r=getVariableTypeFromShorthand(a.uniforms[i].type);t+="uniform "+r+" "+i+";\n",e[i]=a.uniforms[i]}if(this.material)for(i in e)this.material.uniforms[i]&&(e[i].value=this.material.uniforms[i].value);this.fragmentShader=ap.MainShader.fragmentShader,this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERS",a.fragmentMain),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERFUNCTIONS",a.fragmentFunctions),this.fragmentShader=this.fragmentShader.replace("#INCLUDESHADERUTILS",ap.shaders.ShaderUtils+t),this.material=new THREE.ShaderMaterial({uniforms:e,vertexShader:ap.shaders.SimpleTextureShader.vertexShader,fragmentShader:this.fragmentShader}),this.material.uniforms.u_coordsMap.value=this.coordsMap,this.material.uniforms.u_prevCMap.value=this.rtTextureB;var s="SourceQuad",n=this.sceneRTT.getObjectByName(s);n&&this.sceneRTT.remove(n);var o=new THREE.Mesh(this.plane,this.material);o.position.z=-100,o.name=s,this.sceneRTT.add(o)}};var ChannelManager=function(){this.channels=[],this.podpositions=[]};ChannelManager.prototype={init:function(){},update:function(){for(var e=0;e<this.channels.length;e++){var a=this.channels[e];if(a&&a.pods)for(var t=0;t<a.pods.length;t++){var i=a.pods[t];if(i&&i.clips)for(var r=0;r<i.clips.length;r++){var s=i.clips[r];if(s){var n=ap.clips[ap.register[s.clipId]];n&&n.update&&ap.app.material&&n.update("_"+(e+1)+"_"+(t+1)+"_"+(r+1),ap.app.material.uniforms)}}}}},generateSourceShader:function(){for(var e={},a={},t={},i="",r="",s="",n={},o=0;o<this.channels.length;o++){var p=this.channels[o];p.address="_"+(o+1);var d=!1;if(p.type===ap.CHANNEL_TYPE_FX&&(d=!0),e[p.address+"_mix"]={type:"f",value:p.mix},p&&p.pods)for(var h=0;h<p.pods.length;h++){var l=p.pods[h];l.address=p.address+"_"+(h+1),e[l.address+"_mix"]={type:"f",value:l.mix},e[l.address+"_blend"]={type:"f",value:l.blend};var u=!1;if(l.clips&&l.clips.length){var c=this.getPodPos(l.positionId);n!==c&&(r+="resolution = vec2("+c.w+", "+c.h+"); \n",n=c),r+="ap_xyz.x = ap_xyz2.x - "+c.x.toFixed(1)+"; \n",r+="ap_xyz.y = ap_xyz2.y - "+c.y.toFixed(1)+"; \n";for(var m=0;m<l.clips.length;m++)if(l.clips[m]){var _=ap.clips[ap.register[l.clips[m].clipId]];if(_){for(var g in _.variables)if(!a[g]){a[g]=1;var f=getVariableTypeFromShorthand(_.variables[g].type);r+=f+" "+g+";"}r+="\n";for(var S in _.fragmentFunctions)t[S]||(t[S]=1,i+=_.fragmentFunctions[S]+" \n")}}for(r+="\n",r+="if(ap_xyz2.x >= "+c.x.toFixed(1)+" && ap_xyz2.y >= "+c.y.toFixed(1)+" && ap_xyz2.x <= "+(c.w+c.x).toFixed(1)+" && ap_xyz2.y <= "+(c.h+c.y).toFixed(1)+") { \n",u=!0,m=0;m<l.clips.length;m++){var E=l.clips[m];if(E){var v=ap.clips[ap.register[E.clipId]];if(E.address=l.address+"_"+(m+1),v){for(var T in v.properties)e[E.address+"_"+T]=v.properties[T];v.init&&v.init(E.address,e);for(var P in v.params)e[E.address+"_"+P]={type:"f",value:v.params[P].value};e[E.address+"_mix"]={type:"f",value:E.mix},e[E.address+"_blend"]={type:"f",value:E.blend},s=v.fragmentMain+"\n",s=s.replace(/gl_FragColor/g,"ap_rgbV4"),s=s.replace(/ap_fxOut/g,"ap_rgbV4"),s=s.replace(/gl_FragCoord/g,"ap_xyz"),s+="ap_rgb2 = vec3(ap_rgbV4.r, ap_rgbV4.g, ap_rgbV4.b); \n",s+="ap_rgb2 = max(min(ap_rgb2, vec3(1.0)), vec3(0.0)); \n";var x=ap.clips[ap.register[E.clipId]].fx;0===m?(s+="ap_rgb = ap_rgb2; \n",x||d?s+="ap_rgb = mix(ap_p, ap_rgb2, _clip_mix); \n":(u=d,s+="ap_rgb = ap_rgb * (_clip_mix); \n")):x||d?s+="ap_rgb = mix(ap_rgb, ap_rgb2, _clip_mix); \n":(s+="ap_rgb2 = ap_rgb2 * (_clip_mix); \n",s+="ap_rgb = blend(ap_rgb2, ap_rgb, _clip_blend); \n",u=d),s=s.replace(/_clip_/g,E.address+"_"),s=s.replace(/__/g,E.address+"_"),x&&(s=0===m?s.replace(/ap_fxIn/g,"ap_p"):s.replace(/ap_fxIn/g,"ap_rgb")),r+=s}}}r+="}",r+=u?" else{ ap_rgb = ap_p; } \n":" else{ ap_rgb = vec3(0.0);} \n"}0===h?(r+="ap_rgb = ap_rgb * (_pod_mix); \n",r+="ap_p = ap_rgb; \n"):u?r+="ap_p = mix(ap_p, ap_rgb, _pod_mix); \n":(r+="ap_rgb = ap_rgb * (_pod_mix); \n",r+="ap_p = blend(ap_p, ap_rgb, _pod_blend); \n"),r=r.replace(/_pod_/g,l.address+"_")+"\n"}0===o?(r+="ap_p = ap_p * (_channel_mix); \n",r+="ap_c = ap_p; \n"):d?r+="ap_c = mix(ap_c, ap_p, _channel_mix); \n":(r+="ap_p = ap_p * (_channel_mix); \n",r+="ap_c = blend(ap_c, ap_p, 1.0); \n"),r=r.replace(/_channel_/g,p.address+"_")+"\n"}return new Shader(e,i,r+"\n")},setChannel:function(e,a){this.channels[e-1]=a},getChannel:function(e){return this.channels[e-1]},getChannels:function(){return this.channels},clearChannel:function(e){delete this.channels[e-1]},clearAllChannels:function(){this.channels=[]},clearAllPodsInChannel:function(e){delete this.channels[e-1].pods},setPodPos:function(e,a){this.podpositions[e-1]=a},getPodPos:function(e){return this.podpositions[e-1]?this.podpositions[e-1]:this.podpositions[0]},clearPodPos:function(e){delete this.podpositions[e-1]},clearAllPodPos:function(){this.podpositions=[]},setClip:function(e,a,t,i){return this.channels[e-1]?void(this.channels[e-1].pods[a-1]?this.channels[e-1].pods[a-1].clips[t-1]=i:this.channels[e-1].pods[a-1]=new Pod(1,1,ap.BLEND.Add,[i])):!1},clearClip:function(e,a,t){delete this.channels[e-1].pods[a-1].clips[t-1]},clearAllClipsInPod:function(e,a){delete this.channels[e-1].pods[a-1].clips}};var HardwareManager=function(){};HardwareManager.prototype={init:function(){this.importNodes(ap.imported,1,350,100,500),ap.channels.setPodPos(2,new PodPosition(-190,140,0,1070,575,1))},update:function(){},importNodes:function(e,a,t,i,r,s){a=a||0,t=t||0,i=i||0,r=r||0,e.scale=e.scale||1;var n=s||e.scale;for(var o in e.hardwareunit){var p=e.hardwareunit[o];for(var d in p.ports){var h=p.ports[d];for(var l in h.nodes){var u=h.nodes[l];u.x=u.x||0,u.y=u.y||0,u.z=u.z||0,u.x*=n,u.y*=n,u.z*=n,u.x+=t,u.y+=i,u.z+=r}ap.ports.setNodes(h.portid+a,h.nodes)}}},addTestGrid:function(a,t,r){var s=[];for(e=0;e<24;e++)for(i=0;i<14;i++){var n={};n.x=30*e+t,n.y=30*i+r,n.z=0,s.push(n)}ap.ports.setNodes(a,s)},addTestPortsGrid:function(a,t,r){var s=830,n=1100,o=0,p=0;for(u=0;u<15;u++){var d=[];for(e=0;e<18;e++)for(i=0;i<24;i++){var h={};h.x=.26*(40*e+o-650+t),h.y=.26*(40*i+p+r),h.z=300*Math.random()-150,d.push(h)}var l=new Port("port name "+l,ap.PORT_TYPE_KINET_1,null,null,d);ap.ports.setPort(u+a,l),o+=s,(u+2)%5==1&&(o=0,p+=n)}},addTestPortsGrid2:function(a,t,r){var s=[];for(e=0;e<70;e++)for(i=0;i<38;i++){var n={};n.x=20*e-340+t,n.y=20*i+30+r,s.push(n)}var o=new Port("port name "+o,ap.PORT_TYPE_KINET_1,null,null,s);ap.ports.setPort(a,o)},addTestPortsGrid3:function(a,t,r){var s=[],n={};for(e=0;e<70;e++)for(i=0;i<38;i++)n={},n.x=20*e-340+t,n.y=20*i+30+r-1,s.push(n);var o=new Port("port name "+o,ap.PORT_TYPE_KINET_1,null,null,s);for(ap.ports.setPort(a,o),s=[],e=0;e<70;e++)for(i=0;i<38;i++)(i+2)%2==1&&(n={},n.x=20*e-340+t,n.y=20*i+30+r,n.z=110,s.push(n));for(o=new Port("port name "+o,ap.PORT_TYPE_KINET_1,null,null,s),ap.ports.setPort(a+1,o),s=[],e=0;e<70;e++)for(i=0;i<38;i++)(i-1)%3==1&&(e-1)%2==1&&(n={},n.x=20*e-340+t-1,n.y=20*i+30+r-1,n.z=210,s.push(n));o=new Port("port name "+o,ap.PORT_TYPE_KINET_1,null,null,s),ap.ports.setPort(a+2,o)}};var PortManager=function(){this.ports=[]};PortManager.prototype={init:function(){},update:function(){},getNodes:function(e){return this.ports[e-1].nodes},getNodeCount:function(e){return this.ports[e-1].nodes.length},setNodes:function(e,a){this.ports[e-1]||(this.ports[e-1]={}),this.ports[e-1].nodes=a},setNodesOffset:function(e,a,t,i,r){this.ports[e-1]||(this.ports[e-1]={});for(var s=0;s<a.length;s++)a[s].x+=t,a[s].y+=i,a[s].z+=r;this.ports[e-1].nodes=a},setNodesFlat:function(e,a,t){this.ports[e-1]||(this.ports[e-1]={});for(var i=0;i<a.length;i++)a[i].z=t;this.ports[e-1].nodes=a},clearNodes:function(e){delete this.ports[e-1].nodes},setPort:function(e,a){this.ports[e-1]=a},getPort:function(e){return this.ports[e-1]},getPorts:function(){return this.ports},addPortDetails:function(e,a){if(!this.ports[e-1])return void console.log("Error: Cannot add details to unexisting Port "+e);var t=this.ports[e-1].nodes;this.ports[e-1]=merge(this.ports[e-1],a),this.ports[e-1].nodes=t},clearPort:function(e){delete this.ports[e-1]},clearAllPorts:function(){delete this.ports,this.ports=[]}};var UiManager=function(){this.guiData,this.gui=new dat.GUI({load:ap.datguiJson,preset:"Test"})};UiManager.prototype={init:function(){var e=1,a=1,t=[];t[1]=new Pod(2,e,ap.BLEND.Add,[new Clip(3,e,ap.BLEND.Add),new Clip(5,1,ap.BLEND.Fx)]),t[0]=new Pod(1,e,ap.BLEND.Add,[new Clip(2,a,ap.BLEND.Add),new Clip(5,1,ap.BLEND.Fx)]),ap.channels.setChannel(1,new Channel("TestChannel1",ap.CHANNEL_TYPE_BLEND,e,ap.BLEND.Add,t));var i=[];i[0]=new Pod(1,e,ap.BLEND.Add,[new Clip(16,1,ap.BLEND.Fx)]),ap.channels.setChannel(2,new Channel("Post FX1",ap.CHANNEL_TYPE_FX,e,ap.BLEND.Add,i)),ap.app.updateNodePoints(),ap.app.updateMainSourceShader(),this.guiData={Channel1Mix:1,S2Blend:"Add",S2ClipId:ap.demoHardware[0],S2Mix:1,S2Scale:.7,S2HueTint:1,S1Mix:1,S1ClipId:ap.demoHardware[0],S1Scale:.7,S1HueTint:1,Hue:1,Sat:1,HueClamp:1,SatClamp:1,Smooth:.5,PreAmp:1,Speed:ap.app.speed,PointSize:60,Hardware:ap.demoHardware[0]},this.gui.remember(this.guiData),this.gui.add(this.guiData,"Channel1Mix",0,1,1).onChange(function(e){ap.app.material.uniforms._1_mix.value=e}),this.gui.add(this.guiData,"Hardware",ap.demoHardware).onChange(function(e){switch(ap.ports.clearAllPorts(),e){case ap.demoHardware[0]:ap.channels.setPodPos(2,new PodPosition(-190,140,0,1070,575,1)),ap.hardware.importNodes(ap.imported,1,0,0,0);break;case ap.demoHardware[1]:ap.channels.setPodPos(2,{x:-339,y:30,z:10,w:1378,h:738,d:1}),ap.hardware.addTestPortsGrid3(1,0,0);break;case ap.demoHardware[2]:ap.channels.setPodPos(2,new PodPosition(-190,286,0,1070,242,1)),ap.hardware.addTestPortsGrid(1,0,0);break;default:ap.hardware.importNodes(ap.imported,1,0,0,0)}ap.app.updateNodePoints(),ap.app.updateMainSourceShader(),updateShader=!0});var r=this.gui.addFolder("Shader 1"),s=this.gui.addFolder("Shader 2"),n=this.gui.addFolder("Post FX"),o=this.gui.addFolder("Settings");r.add(this.guiData,"S2ClipId",ap.demoPresetNames).onChange(function(e){ap.ui.uniformClipTypeChange(e,1,2,1)}),r.add(this.guiData,"S2Mix",0,1,1).onChange(function(e){ap.app.material.uniforms._1_2_1_mix.value=e}),r.add(this.guiData,"S2Scale",0,1,1).onChange(function(e){ap.app.material.uniforms._1_2_1_p1.value=e}),r.add(this.guiData,"S2HueTint",0,1,1).onChange(function(e){ap.app.material.uniforms._1_2_2_p1.value=e}),r.add(this.guiData,"S2Blend",ap.BLENDS).onChange(function(e){ap.ui.uniformBlendChange(e,"_1_2")}),s.add(this.guiData,"S1ClipId",ap.demoPresetNames).onChange(function(e){ap.ui.uniformClipTypeChange(e,1,1,1)}),s.add(this.guiData,"S1Mix",0,1,1).onChange(function(e){ap.app.material.uniforms._1_1_1_mix.value=e}),s.add(this.guiData,"S1Scale",0,1,1).onChange(function(e){ap.app.material.uniforms._1_1_1_p1.value=e}),s.add(this.guiData,"S1HueTint",0,1,1).onChange(function(e){ap.app.material.uniforms._1_1_2_p1.value=e}),n.add(this.guiData,"Hue",0,1,1).onChange(function(e){ap.app.material.uniforms._2_1_1_p1.value=e}),n.add(this.guiData,"HueClamp",0,1,1).onChange(function(e){ap.app.material.uniforms._2_1_1_p2.value=e}),n.add(this.guiData,"Sat",0,1,1).onChange(function(e){ap.app.material.uniforms._2_1_1_p3.value=e}),n.add(this.guiData,"SatClamp",0,1,1).onChange(function(e){ap.app.material.uniforms._2_1_1_p4.value=e}),n.add(this.guiData,"Smooth",0,.98,1).onChange(function(e){ap.app.material.uniforms._2_1_1_p5.value=e}),n.add(this.guiData,"PreAmp",0,1,0).onChange(function(e){ap.app.material.uniforms._2_1_1_p6.value=e}),o.add(this.guiData,"Speed",0,.15,1).onChange(function(e){ap.app.speed=e}),o.add(this.guiData,"PointSize",15,90,1).onChange(function(e){ap.app.nodeShaderMaterial.uniforms.u_pointSize.value=e}),o.add({ResetCam:function(){ap.app.controls.reset()}},"ResetCam"),r.close(),s.close(),o.close()},update:function(){},uniformBlendChange:function(e,a){var t=1;e===ap.BLENDS[0]?t=1:e===ap.BLENDS[1]?t=2:e===ap.BLENDS[2]?t=3:e===ap.BLENDS[3]?t=4:e===ap.BLENDS[4]?t=5:e===ap.BLENDS[5]?t=6:e===ap.BLENDS[6]?t=7:e===ap.BLENDS[7]?t=8:e===ap.BLENDS[8]?t=9:e===ap.BLENDS[9]?t=10:e===ap.BLENDS[10]?t=11:e===ap.BLENDS[11]?t=12:e===ap.BLENDS[12]?t=13:e===ap.BLENDS[13]?t=14:e===ap.BLENDS[14]?t=15:e===ap.BLENDS[15]?t=16:e===ap.BLENDS[16]&&(t=17),ap.app.material.uniforms[a+"_blend"].value=t},uniformClipTypeChange:function(e,a,t,i){var r=0;"OFF"!==e&&(r=ap.clips[e+"Clip"].id),ap.channels.setClip(a,t,i,new Clip(r,1,ap.BLEND.Add)),updateShader=!0}};var Channel=function(e,a,t,i,r){this.name=e,this.type=a||ap.CHANNEL_TYPE_BLEND,this.mix=t||0,this.blend=i||ap.BLEND.Add,this.pods=r||[]};Channel.prototype={};var Clip=function(e,a,t){this.clipId=e,this.mix=a||0,this.blend=t||ap.BLEND.Add};Clip.prototype={};var Pod=function(e,a,t,i,r,s){this.positionId=e||1,this.mix=a||0,this.blend=t||ap.BLEND.Add,this.clips=i||[],this.hardwareGroupMode=r||ap.HARDWAREGROUP_OFF,this.hardwareGroupIds=s||[]};Pod.prototype={};var PodPosition=function(e,a,t,i,r,s){this.x=e||0,this.y=a||0,this.z=t||0,this.w=i||0,this.h=r||0,this.d=s||0};PodPosition.prototype={};var Port=function(e,a,t,i,r){this.name=e,this.type=a,this.address=t||"",this.nodes=r||[],this.hardwarePort=i||1};Port.prototype={};var Shader=function(e,a,t){this.uniforms=e||{},this.fragmentFunctions=a||"",this.fragmentMain=t||""};Shader.prototype={};